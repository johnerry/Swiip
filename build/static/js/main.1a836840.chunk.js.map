{"version":3,"sources":["assets/garbage_bag.jpg","assets/img/brand/sweeper_logo.png","assets/img/brand/sweeper_small_logo.png","views/Map/AgentMAp.js","history.js","services/Auth.js","utils/utilityFunction.js","store/actions/user.js","views/Pages/Login/Login.js","views/Pages/Register/Register.js","views/Pages/Message/Message.js","_nav.js","views/Order/index.js","views/Map/CustomerMap.js","store/actions/order.js","components/Payment/PayStack.js","views/Order/Summary.js","store/actions/community.js","views/Community/index.js","views/Pickups/New.js","views/Pickups/Pending.js","views/History/index.js","views/Pages/Account/index.js","views/Pages/Account/Support.js","store/actions/admin.js","views/Pages/Account/Editor.js","views/Pages/Account/ReviewAgent.js","views/Pages/Account/ReviewCustomer.js","views/Community/Editor.js","views/Pages/Page404/Page404.js","views/Community/View.js","routeList.js","containers/DefaultLayout/DefaultFooter.js","containers/DefaultLayout/DefaultHeader.js","containers/DefaultLayout/DefaultLayout.js","components/Payment/whatever.js","routes.js","components/Payment/Test.js","store/reducers/user.js","store/reducers/order.js","store/reducers/admin.js","store/reducers/community.js","store/reducers/ui.js","store/index.js","store/actions/actionTypes.js","providers.js","app.js","serviceWorker.js","index.js"],"names":["module","exports","map","panorama","infoWindow","google","directionsRenderer","directionsService","require","createBrowserHistory","ls","SecureLS","encodingType","getDuration","sessionStorage","getItem","getAuthEmail","get","getAuthUserType","getAuthLatLng","getAuthName","getAuthImage","setAuthImage","image","setItem","set","setAuthName","name","setAuthLatLng","latLng","getOrderQty","localStorage","setOrderQty","orderQty","signOut","removeAuthState","window","location","reload","getAuthUserAll","id","findBy","user_type","token","removeAll","clear","setAuthToken","authenticateUser","email","userType","duration","htmlspecialchars_decode","data","replace","matched","stringRepAll","object","list","property","reg","RegExp","substring","length","dateConstructor","dateInt","dateObject","Date","year","getFullYear","shortYear","toString","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","ampm","StringToJSX","props","createJSX","nodeArray","node","index","attributeObj","key","attributes","localName","childNodes","nodeValue","Array","from","forEach","attribute","styleAttributes","split","styleObj","value","styleParser","React","createElement","isArray","str","domString","DOMParser","parseFromString","body","fetchUserDataSuccess","userData","type","payload","fetchUserDataFailure","error","resetUserData","dispatch","a","sendFetchAccountData","axios","post","headers","then","response","catch","errorMessage","message","Login","state","password","keep_signIn","buttonText","notification","handleChange","bind","handleSubmit","e","this","setState","target","checked","preventDefault","sendFetchData","JSON","stringify","formData","FormData","append","encodeURIComponent","history","push","prevProps","stayingDuration","userloading","defaultLatLng","className","Container","Row","Col","md","CardGroup","Card","CardBody","Form","onSubmit","method","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","onChange","placeholder","autoComplete","required","xs","style","paddingRight","variant","color","size","Button","to","fontSize","width","active","tabIndex","Component","compose","withRouter","connect","Register","phoneNumber","gender","birthday","country","companyName","address","formFor","activeTab","tab","user","formOption","role","aria-label","max","min","height","disabled","block","json","regDate","getUTCMonth","getUTCDate","newdate","getUTCFullYear","latLngPicker","console","log","customerTab","agentTab","form","sm","lg","xl","Nav","tabs","NavItem","textAlign","NavLink","onClick","toggle","title","TabContent","TabPane","tabId","Message","screen","changeDisplayOpt","undefined","dataDisplayed","align","backgroundColor","padding","borderRadius","marginRight","border","customer","items","url","icon","agent","children","admin","Order","quantity","price","transportFee","total","Qty","Fragment","src","bag","alt","htmlFor","CustomerMap","defaultAddressBox","lat","lng","searchBox","addressBox","phone","newLatLng","pickupStateCountry","setAsDefault","notifDisplay","googleMapRef","createRef","initAutocomplete","handleMapChange","close","marker","markers","geoCodeValue","mapToState","myLatlng","handleLocationError","browserHasGeolocation","pos","setPosition","setContent","open","maps","InfoWindow","Map","current","center","zoom","mapTypeId","addListener","mapsMouseEvent","setMap","geoCode","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","getCenter","setCenter","input","document","getElementById","places","SearchBox","latitudeLogitude","Geocoder","geocode","results","status","setZoom","Marker","formatted_address","address_components","long_name","setBounds","getBounds","getPlaces","bounds","LatLngBounds","place","geometry","vicinity","viewport","union","extend","fitBounds","pickupLatLng","pickupAddress","turnOn","parse","script","contains","googleScript","async","setAttribute","appendChild","addEventListener","goBack","logoutUser","ref","FormGroup","maxWidth","display","PureComponent","changeRouteNow","AgentMap","personOf","route","changeState","rightPanel","initMap","addRoute","processSVData","changeRoute","DirectionsRenderer","DirectionsService","sv","StreetViewService","StreetViewPanorama","streetViewControl","event","getPanorama","radius","setPanel","origin","destination","travelMode","setDirections","alert","description","setPano","pano","setPov","heading","pitch","setVisible","markerPanoID","marginBottom","href","fetchOrderDataSuccess","orderData","fetchOrderDataFailure","sendFetchOrderData","PayStack","payWithPaystack","payStackScript","lastName","firstName","saveOrder","PaystackPop","setup","amount","firstname","lastname","onClose","callback","reference","openIframe","button","Summary","modal","fullName","stateCountry","defaultAddress","nameExplode","trim","orderRef","sendOrderData","genericState","orderloading","pathname","fetchCommunityDataSuccess","fetchCommunityDataFailure","sendCommunityData","Community","deleting","sendCommData","communityData","submitted","commDisplay","overflow","comm","eachPara","details","percentage","Math","round","fundGotten","fundNeeded","draftToHtml","indexOf","margin","Progress","New","orderList","sendMeto","accept","orders","filter","order","OrderDisplay","Pending","orderDate","History","historyList","sort","b","iorderDate","date","Account","file","oldPassword","newPassword","imagePreviewUrl","handleFileChange","fileRef","commonState","demoName","demoGender","demoBirthday","prevImage","files","picReader","FileReader","onloadend","result","readAsDataURL","test","displayData","passwordButton","encType","Modal","isOpen","ModalHeader","ModalBody","Label","ModalFooter","Support","marginTop","fetchAdminDataSuccess","fetchAdminDataFailure","sendAdminData","Editor","propStatus","propEmail","propPhone","newStatus","newEmail","newPhone","sendTo","adminData","loading","ReviewAgent","emailFinder","adminList","adminListToDisplay","genericFind","toLowerCase","adminDisplay","ReviewCustomer","Edit","editorState","EditorState","createEmpty","onEditorStateChange","cleanSlate","updateState","find","editorStuff","convertFromRaw","createWithContent","match","params","sendData","isNaN","errorMesage","convertToRaw","getCurrentContent","wrapperClassName","editorClassName","toolbar","options","Page404","View","dontShow","commData","donateRef","pageDisplay","fontWeight","published","adminRoutes","path","exact","component","agentRoutes","AgentMAp","customerRoutes","DefaultFooter","defaultProps","DefaultHeader","mobile","full","sweeperLogo","minimized","sweeperLogoSmall","navbar","UncontrolledDropdown","nav","direction","DropdownToggle","DropdownMenu","right","DropdownItem","header","tag","Badge","onLogout","DefaultLayout","adminTab","cusRoutes","agtRoutes","admRoutes","routes","routePicker","navPicker","fixed","navConfig","router","appRoutes","fluid","idx","render","whatever","say","PrivateRoute","rest","Route","ensureNonAuth","initialState","isUserLoading","appReducer","combineReducers","action","ui","middleware","composeEnhancers","applyMiddleware","thunkMiddleware","store","createStore","App","Boolean","hostname","app","ReactDOM","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a836840.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/garbage_bag.9d9e13d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sweeper_logo.4bfcf060.png\";","module.exports = __webpack_public_path__ + \"static/media/sweeper_small_logo.38eeb870.png\";","\nimport React from 'react'\nimport { Row, Col, Button } from 'reactstrap';\nimport { getAuthLatLng } from '../../services/Auth'\nlet map, panorama, infoWindow, google;\nlet changeRouteNow = false;\nlet directionsRenderer;\nlet directionsService;\n\nclass AgentMap extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      personOf: '',\n      email: '',\n      phone: '',\n      pickupAddress: '',\n      pickupStateCountry: '',\n      defaultLatLng: '',\n      route: '',\n    }\n\n    this.changeState = this.changeState.bind(this);\n    this.googleMapRef = React.createRef();\n    this.rightPanel = React.createRef();\n    this.initMap = this.initMap.bind(this);\n    this.addRoute = this.addRoute.bind(this);\n    this.handleLocationError = this.handleLocationError.bind(this);\n    this.processSVData = this.processSVData.bind(this);\n    this.changeRoute = this.changeRoute.bind(this);\n  }\n  \n  changeState(data) {\n    this.setState(data)\n  }\n\n  changeRoute() {\n    changeRouteNow = true;\n    this.setState({\n      defaultLatLng: JSON.parse(getAuthLatLng())\n    })\n    map = panorama = infoWindow = google = '';\n    this.initMap();\n  }\n\n  componentDidMount() {\n    if (this.props.location.data === undefined) {\n      this.props.history.push('/pickups/new');\n    } else {\n      const { personOf, email, phone, pickupAddress, pickupStateCountry, defaultLatLng, route } = this.props.location.data;\n      this.setState({\n        personOf,\n        email,\n        phone,\n        pickupAddress,\n        pickupStateCountry,\n        defaultLatLng,\n        route\n      });\n      const script = document.getElementById('googleMapAgentScript');\n      if (document.contains(script)) {\n        this.initMap();\n        return null;\n      }\n      let googleScript = document.createElement('script');\n      // API key invalid, add yours or contact @johnerry on git or fashanutosin7@gmail.com\n      googleScript.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyBKHdFymwu91lTBTQBDgltrFaXPD6TxY2g';\n      googleScript.async = true;\n      googleScript.setAttribute('id', 'googleMapAgentScript');\n      window.document.body.appendChild(googleScript);\n      googleScript.addEventListener('load', this.initMap);\n    }\n  }\n\n  initMap() {\n    const { defaultLatLng } = this.state;\n    google = window.google;\n    if (directionsRenderer === undefined) {\n      directionsRenderer = new google.maps.DirectionsRenderer();\n      directionsService = new google.maps.DirectionsService();\n    }\n    const addRoute = this.addRoute;\n    const changeState = this.changeState;\n    const handleLocationError = this.handleLocationError;\n    const processSVData = this.processSVData;\n    const sv = new google.maps.StreetViewService();\n    panorama = new google.maps.StreetViewPanorama(document.getElementById('pano'));\n    // Seting up the map.\n    map = new google.maps.Map(this.googleMapRef.current, {\n      center: defaultLatLng,\n      zoom: 16,\n      streetViewControl: false\n    });\n\n    infoWindow = new google.maps.InfoWindow();\n    // Trying geolocation.\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        if (changeRouteNow === false) {\n         changeState({\n           defaultLatLng: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          }\n         });\n        }\n\n        if (defaultLatLng !== undefined) {\n          addRoute();\n        }\n      }, () => {\n        addRoute();\n        handleLocationError(true, infoWindow, map.getCenter());\n      });\n    } else {\n      addRoute();\n      // If browser doesn't support Geolocation\n      handleLocationError(false, infoWindow, map.getCenter());\n    }\n    // Set the initial Street View camera to the center of the map\n    map.addListener('click', (event) => {\n      sv.getPanorama({ location: event.latLng, radius: 50 }, processSVData);\n    });\n\n  }\n\n  addRoute() {\n    const { route, defaultLatLng } = this.state;\n    directionsRenderer.setMap(map);\n    directionsRenderer.setPanel(this.rightPanel.current);\n    directionsService.route({\n      origin: defaultLatLng,\n      destination: route,\n      travelMode: 'DRIVING'\n    }, (response, status) => {\n      if (status === 'OK') {\n        directionsRenderer.setDirections(response);\n      } else {\n        window.alert('Directions request failed due to ' + status);\n      }\n    });\n  }\n\n  processSVData(data, status) {\n    let marker;\n    if (status === 'OK') {\n      if (data !== null) {\n        marker = new google.maps.Marker({\n          position: data.location.latLng,\n          map: map,\n          title: data.location.description\n        });\n      }\n\n      panorama.setPano(data.location.pano);\n      panorama.setPov({\n        heading: 270,\n        pitch: 0\n      });\n      panorama.setVisible(true);\n\n      marker.addListener('click', () => {\n        const markerPanoID = data.location.pano;\n        // Set the Pano to use the passed panoID.\n        panorama.setPano(markerPanoID);\n        panorama.setPov({\n          heading: 270,\n          pitch: 0\n        });\n        panorama.setVisible(true);\n      });\n    } else {\n      console.error('Street View data not found for this location.');\n    }\n  }\n\n  handleLocationError(browserHasGeolocation, infoWindow, pos) {\n    infoWindow.setPosition(pos);\n    infoWindow.setContent(browserHasGeolocation ?\n      'Error: The Geolocation service failed.' :\n      'Error: Your browser doesn\\'t support geolocation.');\n    infoWindow.open(map);\n  }\n\n  render() {\n    const { personOf, email, phone, pickupAddress, pickupStateCountry } = this.state;\n    return (\n      <Row>\n        <Col xs=\"12\" md=\"5\" style={{ marginBottom: '2em' }}>\n          <div className=\"agentDetailer name\"><span role=\"img\" aria-label=\"name\">&#128100;</span>{personOf}</div>\n          <div className=\"agentDetailer\"><span role=\"img\" aria-label=\"email\">&#9993;</span> <a href={\"mailto:\"+email}>{email}</a></div>\n          <div className=\"agentDetailer\"><span role=\"img\" aria-label=\"name\">&#9742;</span> <a href={\"tel:\"+phone}>{phone}</a></div>\n          <div className=\"agentDetailer name\"><span role=\"img\" aria-label=\"address\">&#9873;</span>{pickupAddress}</div>\n          <p>{pickupStateCountry}</p>\n          <Button color=\"dark\" className=\"px-3\" onClick={this.changeRoute}>Default Location</Button>\n        </Col>\n        <Col xs=\"12\" md=\"7\">\n          <div className=\"container_agent\">\n            <div className=\"map_container\">\n              <div id=\"map\" ref={this.googleMapRef}></div>\n            </div>\n            {/* ROUTE PANEL */}\n            <input type=\"checkbox\" id=\"one\" name=\"\" value=\"\" />\n            <label htmlFor=\"one\" className=\"one\">\n              <div type=\"button\" className=\"route_button\" name=\"button\">Route</div>\n            </label>\n            <span className=\"horizontal_rule\"></span>\n            <div className=\"route\">\n              <div id=\"right-panel\" ref={this.rightPanel}></div>\n            </div>\n            {/* ROUTE PANEL */}\n            <input type=\"checkbox\" id=\"two\" name=\"\" value=\"\" />\n            <label htmlFor=\"two\" className=\"two\">\n              <div type=\"button\" name=\"button\" className=\"street_button\" >Imagery</div>\n            </label>\n            <div className=\"street\">\n              <div id=\"pano\"></div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n    )\n  }\n}\nexport default AgentMap;\n","/* eslint-disable linebreak-style */\n\n// @desc  Import for browser history. Used to push pages, goBack, goForward, etc\n// @use   import { history } from 'routes'; history.push('/sign-in')\nconst { createBrowserHistory } = require('history');\n\nexport default createBrowserHistory();\n","/* eslint-disable linebreak-style */\n\n// @desc  Use secure-ls to store sensitive data in the local storage. It encrypts the data.\n// @use   Instead of localStorage, use ls.\n// @ex.   Check this file for examples.\nimport SecureLS from 'secure-ls';\nconst ls = new SecureLS({ encodingType: 'aes' });\n\n\nconst getDuration = () => {\n  if (sessionStorage.getItem(\"swiipDuration\")) {\n    return 'session';\n  } else {\n    return 'local';\n  }\n}\n\n// export const isAuthEmail = () => ls.get('swiipEmail');\n// export const isAuthUserType = () => ls.get('swiipUserType');\n\nexport const getAuthEmail = () => {\n  if (getDuration() === 'session') {\n    return sessionStorage.getItem(\"swiipEmail\");\n  } else {\n    return ls.get('swiipEmail');\n  }\n};\n\nexport const getAuthID = () => {\n  if (getDuration() === 'session') {\n    return sessionStorage.getItem(\"swiipID\");\n  } else {\n    return ls.get('swiipID');\n  }\n};\n\nexport const getAuthUserType = () => {\n  if (getDuration() === 'session') {\n    return sessionStorage.getItem(\"swiipUserType\");\n  } else {\n    return ls.get('swiipUserType');\n  }\n};\n\nexport const getAuthToken = () => {\n  if (getDuration() === 'session') {\n    return sessionStorage.getItem(\"swiipToken\");\n  } else {\n    return ls.get('swiipToken');\n  }\n};\n\nexport const getAuthLatLng = () => {\n  if (getDuration() === 'session') {\n    return sessionStorage.getItem(\"swiipLatLng\");\n  } else {\n    return ls.get('swiipLatLng');\n  }\n};\n\nexport const getAuthName = () => {\n  if (getDuration() === 'session') {\n    return sessionStorage.getItem(\"swiipName\");\n  } else {\n    return ls.get('swiipName');\n  }\n};\n\nexport const getAuthImage = () => {\n  if (getDuration() === 'session') {\n    return sessionStorage.getItem(\"swiipImage\");\n  } else {\n    return ls.get('swiipImage');\n  }\n};\n\nexport const setAuthImage = (image) => {\n  if (getDuration() === 'session') {\n    sessionStorage.setItem(\"swiipImage\", image);\n  } else {\n    ls.set('swiipImage', image);\n  }\n}\n\nexport const setAuthName = (name) => {\n  if (getDuration() === 'session') {\n    sessionStorage.setItem(\"swiipName\", name);\n  } else {\n    ls.set('swiipName', name);\n  }\n}\n\nexport const setAuthLatLng = (latLng) => {\n  if (getDuration() === 'session') {\n    sessionStorage.setItem(\"swiipLatLng\", latLng);\n  } else {\n    ls.set('swiipName', latLng);\n  }\n}\n\n\nexport const getOrderQty = () => {\n  return localStorage.getItem('swiipOrderQty');\n};\n\nexport const setOrderQty = (orderQty) => {\n  localStorage.setItem('swiipOrderQty', orderQty);\n}\n\n// export const getAuthorizationHeader = () => `Bearer ${isAuthenticated()}`;\n\n\nexport const signOut = () => {\n  removeAuthState();\n  window.location.reload(true);\n}\n\nexport const getAuthUserAll = () => {\n  if (getDuration() === 'session') {\n    return {\n      id: sessionStorage.getItem(\"swiipID\"),\n      name: sessionStorage.getItem(\"swiipName\"),\n      findBy: sessionStorage.getItem(\"swiipEmail\"),\n      user_type: sessionStorage.getItem(\"swiipUserType\"),\n      token: sessionStorage.getItem(\"swiipToken\")\n    }\n  } else {\n    return {\n      id: ls.get(\"swiipID\"),\n      name: ls.get(\"swiipName\"),\n      findBy: ls.get(\"swiipEmail\"),\n      user_type: ls.get('swiipUserType'),\n      token: ls.get('swiipToken')\n    }\n  }\n}\n\n\nexport const removeAuthState = () => {\n  ls.removeAll();\n  sessionStorage.clear();\n  localStorage.clear();\n};\n\nexport const setAuthToken = (token) => {\n  if (getDuration() === 'session') {\n    sessionStorage.setItem(\"swiipToken\", token);\n  } else {\n    ls.set('swiipToken', token);\n  }\n}\n\nexport const authenticateUser = (id, name, email, userType, token, image, latLng, duration) => {\n  if (duration === 'session') {\n    sessionStorage.setItem(\"swiipID\", id);\n    sessionStorage.setItem(\"swiipName\", name);\n    sessionStorage.setItem(\"swiipEmail\", email);\n    sessionStorage.setItem(\"swiipUserType\", userType);\n    sessionStorage.setItem(\"swiipToken\", token);\n    sessionStorage.setItem(\"swiipImage\", image);\n    sessionStorage.setItem(\"swiipLatLng\", latLng);\n    sessionStorage.setItem(\"swiipDuration\", duration);\n  } else {\n    ls.set(\"swiipID\", id);\n    ls.set(\"swiipName\", name);\n    ls.set(\"swiipEmail\", email);\n    ls.set('swiipUserType', userType);\n    ls.set('swiipToken', token);\n    ls.set('swiipImage', image);\n    ls.set('swiipLatLng', latLng);\n    ls.set('swiipDuration', duration);\n  }\n};\n\n// export default {\n//   isAuthEmail,\n//   removeAuthenticatedState,\n//   authenticateUser\n// };\nexport default {\n  getAuthEmail,\n  getAuthUserType,\n  getAuthToken,\n  getOrderQty,\n  getAuthName,\n  getAuthLatLng,\n  setAuthLatLng,\n  setAuthName,\n  signOut,\n  getAuthImage,\n  setAuthImage,\n  getAuthID,\n  getAuthUserAll,\n  setOrderQty,\n  setAuthToken,\n  removeAuthState,\n  authenticateUser\n};\n","import React from 'react'\r\n\r\nexport const htmlspecialchars_decode = (data) => {\r\n  const map = {\r\n    '\"Segoe UI\"': 'Segoe UI',\r\n    '\"Open Sans\"': ' Open Sans',\r\n    '\"Fira Sans\"': 'Fira Sans',\r\n    '\"Helvetica Neue\"': 'Helvetica Neue',\r\n    \"&amp;\": \"&\",\r\n    \"&lt;\": \"<\",\r\n    \"&gt;\": \">\",\r\n    \"&quot;\": '\"',\r\n    \"&#039;\": \"'\"\r\n  };\r\n  return data.replace(/&amp;|&lt;|&gt;|&quot;|&#039;|\"Segoe UI\"|\"Open Sans\"|\"Fira Sans\"|\"Helvetica Neue\"/gi, function (matched) {\r\n    return map[matched];\r\n  });\r\n}\r\n\r\nexport const styleParser = (data) => {\r\n  const map = {\r\n    \"font-size\": \"fontSize\",\r\n    \"font-family\": \"fontFamily\",\r\n    \"background-color\": \"backgroundColor\",\r\n    \"text-align\": \"textAlign\"\r\n  };\r\n  return data.replace(/font-size|font-family|background-color|text-align/gi, function (matched) {\r\n    return map[matched];\r\n  });\r\n}\r\n\r\nexport const stringRepAll = (object, data) => {\r\n  let list = '';\r\n  for (let property in object) {\r\n    list = list + '\\\\' + property + '|';\r\n  }\r\n  let reg = new RegExp(list.substring(0, list.length - 1), \"gi\");\r\n\r\n  return data.replace(reg, function (matched) {\r\n    return object[matched];\r\n  });\r\n}\r\n\r\nexport const dateConstructor = (dateInt) => {\r\n  const dateObject = new Date(dateInt * 1000);\r\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n  const year = dateObject.getFullYear();\r\n  const shortYear = \"'\" + year.toString().substring(2);\r\n  const month = months[dateObject.getMonth()];\r\n  const day = dateObject.getDate();\r\n  let hour = dateObject.getHours();\r\n  let minute = dateObject.getMinutes();\r\n  let ampm = hour >= 12 ? 'pm' : 'am';\r\n  hour = hour % 12;\r\n  hour = hour ? hour : 12;\r\n  hour = hour < 10 ? '0' + hour : hour;\r\n  minute = minute < 10 ? '0' + minute : minute;\r\n  return { year, shortYear, month, day, hour, minute, ampm };\r\n}\r\n\r\n\r\nconst getNodes = (str) =>\r\n  new DOMParser().parseFromString(str, \"text/html\").body.childNodes;\r\nlet createJSX = nodeArray => {\r\n  // const className = nodeArray[0].className;\r\n  return nodeArray.map((node, index) => {\r\n    let attributeObj = { key: index };\r\n    const {\r\n      attributes,\r\n      localName,\r\n      childNodes,\r\n      nodeValue\r\n    } = node;\r\n    if (attributes) {\r\n      Array.from(attributes).forEach(attribute => {\r\n        if (attribute.name === \"style\") {\r\n          let styleAttributes = attribute.nodeValue.split(\";\");\r\n          let styleObj = {};\r\n          styleAttributes.forEach(attribute => {\r\n            let [key, value] = attribute.split(\":\");\r\n            key = styleParser(key);\r\n            styleObj[key] = value;\r\n          });\r\n          attributeObj[attribute.name] = styleObj;\r\n        } else {\r\n          attributeObj[attribute.name] = attribute.nodeValue;\r\n        }\r\n      });\r\n    }\r\n    return localName ?\r\n      React.createElement(\r\n        localName,\r\n        attributeObj,\r\n        childNodes && Array.isArray(Array.from(childNodes)) ?\r\n          createJSX(Array.from(childNodes)) :\r\n          []\r\n      ) :\r\n      nodeValue;\r\n  });\r\n};\r\n\r\nexport const StringToJSX = props => {\r\n  return createJSX(Array.from(getNodes(props.domString)));\r\n};\r\n\r\n\r\nexport default {\r\n  htmlspecialchars_decode,\r\n  stringRepAll,\r\n  StringToJSX,\r\n  dateConstructor\r\n}","/* eslint-disable linebreak-style */\nimport axios from 'axios'\nimport { SET_USER } from './actionTypes';\nimport { userUiStartLoading, userUiStopLoading } from './ui';\n\nexport const setUser = (user) => ({\n  type: SET_USER,\n  user\n});\n\nexport const fetchUserDataRequest = () => ({ type: \"FETCH_USER_DATA_REQUEST\" });\nexport const fetchUserDataSuccess = (userData) => ({ type: \"FETCH_USER_DATA_SUCCESS\", payload: userData });\nexport const fetchUserDataFailure = (error) => ({ type: \"FETCH_USER_DATA_FAILURE\", payload: error });\n\nexport const resetUserData = () => async (dispatch) => {\n  dispatch({type: 'RESET_USER_DATA'});\n}\n\nexport const sendFetchAccountData = (data) => async (dispatch) => {\n  try {\n    dispatch(fetchUserDataRequest());\n    axios.post('https://swiip.000webhostapp.com/account.php', data, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      }\n    }).then(response => {\n        const userData = response.data;\n        // console.log(data);\n        dispatch(fetchUserDataSuccess(userData));\n      })\n      .catch(error => {\n        const errorMessage = error.message;\n        // console.log('fail');\n        dispatch(fetchUserDataFailure(errorMessage));\n      })\n\n  } catch (error) {\n\n  }\n\n}\n\n\n\nexport const getUser = () => async (dispatch) => {\n  try {\n    // Make UI start loading was request started\n    dispatch(userUiStartLoading());\n    // Make necessary request to get the user, e.g\n    // const res = await axios.get(`/user`);\n\n    // Stop UI loading after response has been gotten\n    dispatch(userUiStopLoading());\n    // Performs necessary request after user has been gotten, e.g\n    // Success:\n    // if (res.success) {\n    //   dispatch(setUser(res.body));\n    //   return null;\n    // }\n    // Failure, Unauthorized:\n    // if (res.status === 401) {\n    //   dispatch(resetApp());\n    //   return 0;\n    // }\n  } catch (error) {\n    dispatch(userUiStopLoading());\n    // If error occurs in getting user, e.g\n    // return 'Something went wrong. Check your connection.';\n  }\n};\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { AppSwitch } from '@coreui/react'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { getAuthEmail, authenticateUser, getAuthUserType } from '../../../services/Auth';\nimport { htmlspecialchars_decode } from '../../../utils/utilityFunction'\nimport {\n  Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup,\n  InputGroupAddon, InputGroupText, Row\n} from 'reactstrap';\nimport { sendFetchAccountData, resetUserData } from '../../../store/actions/user';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      keep_signIn: false,\n      buttonText: '',\n      notification: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  };\n\n  handleChange(e) {\n    this.setState(\n      {\n        [e.target.id]: (() => (e.target.id === 'keep_signIn' ? (e.target.checked) : (e.target.value)))()\n      }\n    );\n  };\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let { sendFetchData } = this.props;\n    const { email, password } = this.state;\n    let data = JSON.stringify({ email, password });\n    let formData = new FormData();\n    formData.append('request', 'login');\n    formData.append('data', encodeURIComponent(data));\n    sendFetchData(formData);\n  }\n\n  componentDidMount() {\n    const { resetUserData } = this.props;\n    if (getAuthEmail() && getAuthUserType()) {\n      this.props.history.push('/account');\n    } else {\n      resetUserData();\n    }\n  };\n\n  componentDidUpdate(prevProps) {\n    let stayingDuration = '';\n    const { userloading, error, errorMessage, userData } = this.props.userData;\n    const { keep_signIn } = this.state;\n\n    if (this.props !== prevProps) {\n      if (error === 'true' && errorMessage !== '') {\n        this.setState({\n          notification: errorMessage\n        });\n      }\n      if (userData.length !== 0) {\n        if (userData.error === 'false' && userloading === 'done' && userData.message === 'Login success') {\n          keep_signIn === true ? (stayingDuration = 'local') : (stayingDuration = 'session');\n          const { id, email, name, user_type, token, image, defaultLatLng } = userData.data[0];\n          authenticateUser(id, name, email, user_type, token, image, htmlspecialchars_decode(defaultLatLng), stayingDuration);\n          this.props.history.push('/account');\n        } else {\n          this.setState({\n            notification: userData.errorMessage\n          });\n        }\n      };\n    };\n  };\n\n  render() {\n    let buttonText = '';\n    const { email, password, notification } = this.state;\n    const { userloading } = this.props.userData;\n    userloading === 'done' ? (buttonText = 'Login') :\n      (userloading === 'true' ? (buttonText = <div id=\"loader\"></div>) : (buttonText = 'Login'));\n      \n    return (\n      <div className=\"app flex-row align-items-center background_image\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"9\">\n              <CardGroup>\n                <Card className=\"p-4\">\n                  <CardBody>\n                    <Form onSubmit={this.handleSubmit} method=\"post\">\n                      <h1>Login</h1>\n                      <p className=\"text-muted\">Sign In to your account</p>\n                      <span className=\"error\">{notification} </span>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"fa fa-user\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type=\"text\" id=\"email\" value={email} onChange={this.handleChange} placeholder=\"Email\" autoComplete=\"email\" required />\n                      </InputGroup>\n\n                      <span className=\"error\">{notification}</span>\n                      <InputGroup className=\"mb-4\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"fa fa-lock\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type=\"password\" id=\"password\" value={password} onChange={this.handleChange} placeholder=\"Password\" autoComplete=\"password\" required />\n                      </InputGroup>\n                      <Row>\n                        <Col xs=\"7\" style={{ paddingRight: '0px' }}>\n                          <span id=\"switch\"><AppSwitch onChange={this.handleChange} id=\"keep_signIn\" className={'mx-1'} variant={'3d'} color={'primary'} size={'sm'} /></span>\n                        &nbsp; Remember me\n                        </Col>\n                        <Col xs=\"5\" className=\"text-right\">\n                          <Button color=\"link\" className=\"px-0\"><Link to=\"/message\" style={{fontSize:'0.85em'}}>Forgot password?</Link></Button>\n                        </Col>\n                      </Row>\n                      <Row className=\"login_register\">\n                        <Col xs=\"6\" >\n                          <Button color=\"primary\" type=\"submit\" className=\"px-4\">{buttonText}</Button>\n                        </Col>\n                        <Col xs=\"6\" className=\"text-right\">\n                          <Link to=\"/register\">\n                            <Button color=\"dark\" className=\"px-3\">Register</Button>\n                          </Link>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </CardBody>\n                </Card>\n                <Card className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\n                  <CardBody className=\"text-center\">\n                    <div>\n                      <h2>Sign up</h2>\n                      <p>Welcome to Broomy. <br /> This website is  currently under development, but you can create your customer account by clicking on the link below! </p>\n                      <Link to=\"/register\">\n                        <Button color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</Button>\n                      </Link>\n                    </div>\n                  </CardBody>\n                </Card>\n              </CardGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userData: state.userData\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    resetUserData: () => dispatch(resetUserData()),\n    sendFetchData: (data) => dispatch(sendFetchAccountData(data))\n  };\n};\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(Login);","import React, { Component } from 'react';\nimport {\n  Button, Card, CardBody, Col, Container, Form, Input, InputGroup\n  , InputGroupAddon, InputGroupText, Row, Nav, NavItem, NavLink, TabContent, TabPane\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { getAuthEmail, getAuthUserType } from '../../../services/Auth';\nimport { sendFetchAccountData, resetUserData } from '../../../store/actions/user';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: '',\n      phoneNumber: '',\n      name: '',\n      gender: 'Male',\n      birthday: '',\n      state: 'Abuja',\n      country: 'Nigeria',\n      companyName: '',\n      address: '',\n      formFor: 'customer',\n      activeTab: [\"1\"]\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggle(tab, user) {\n    this.setState({\n      formFor: user,\n      activeTab: [tab]\n    });\n  };\n\n  form(formFor) {\n    let formOption;\n    let buttonText = '';\n    let notification = '';\n    const { email, phoneNumber, name, gender, birthday, state, country, companyName, address } = this.state;\n    const { userloading, error, errorMessage, userData } = this.props.userData;\n    error === 'true' && errorMessage !== '' ? (notification = errorMessage)\n      : (userData.error === 'true' ? (notification = userData.errorMessage) : (notification = ''));\n    userloading === 'done' ? (buttonText = 'Create Account') :\n      (userloading === 'true' ? (buttonText = <div id=\"loader\"></div>) : (buttonText = 'Create Account'));\n\n    if (formFor === 'customer') {\n      formOption = <>\n        <InputGroup className=\"mb-3\">\n          <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>\n              <i className=\"fa fa-user\"></i>\n            </InputGroupText>\n          </InputGroupAddon>\n          <Input type=\"text\" id=\"name\" value={name} onChange={this.handleChange} placeholder=\"Surname - Space - Name\" autoComplete=\"name\" required />\n        </InputGroup>\n        <InputGroup className=\"mb-3\">\n          <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText><span role=\"img\" aria-label=\"name\">&#9892;</span></InputGroupText>\n          </InputGroupAddon>\n          <Input type=\"select\" id=\"gender\" value={gender} onChange={this.handleChange}>\n            <option>Male</option>\n            <option>Female</option>\n          </Input>\n        </InputGroup>\n        <InputGroup className=\"mb-4\" >\n          <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>\n              <span role=\"img\" aria-label=\"name\">&#128198; &nbsp; Birth</span>\n            </InputGroupText>\n          </InputGroupAddon>\n          <Input type=\"date\" id=\"birthday\" value={birthday} onChange={this.handleChange} max=\"2030-12-30\" min=\"1940-01-01\" placeholder=\"yyyy-mm-dd\" required />\n        </InputGroup>\n      </>;\n    } else {\n      formOption = <>\n        <InputGroup className=\"mb-3\">\n          <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>\n              <span role=\"img\" aria-label=\"name\">&#127963;</span>\n            </InputGroupText>\n          </InputGroupAddon>\n          <Input type=\"text\" id=\"companyName\" value={companyName} onChange={this.handleChange} placeholder=\"Company FULL Name\" autoComplete=\"company\" required />\n        </InputGroup>\n        <InputGroup className=\"mb-3\">\n          <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>\n              <span role=\"img\" aria-label=\"name\">&#9942;</span>\n            </InputGroupText>\n          </InputGroupAddon>\n          <Input type=\"textarea\" style={{ height: '6.7em' }} id=\"address\" value={address} onChange={this.handleChange} placeholder=\"Company Address\" autoComplete=\"address\" required />\n        </InputGroup>\n      </>;\n    }\n\n    return (\n      <Form onSubmit={this.handleSubmit} method=\"post\" id={formFor}>\n        <InputGroup className=\"mb-3\">\n          <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText><i className=\"fa fa-envelope\"></i></InputGroupText>\n          </InputGroupAddon>\n          <Input type=\"text\" id=\"email\" value={email} onChange={this.handleChange} placeholder=\"Email\" autoComplete=\"email\" required />\n        </InputGroup>\n        <InputGroup className=\"mb-3\">\n          <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>\n              <span role=\"img\" aria-label=\"phone\">&#9742;</span>\n            </InputGroupText>\n          </InputGroupAddon>\n          <Input type=\"text\" id=\"phoneNumber\" value={phoneNumber} onChange={this.handleChange} placeholder=\"Phone Number\" autoComplete=\"phone number\" required />\n        </InputGroup>\n        {formOption}\n        <InputGroup className=\"mb-3\">\n          <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText><span role=\"img\" aria-label=\"name\">&#9873;</span></InputGroupText>\n          </InputGroupAddon>\n          <Input type=\"select\" id=\"state\" value={state} onChange={this.handleChange}>\n            <option>Abuja</option>\n            <option>Ibadan</option>\n            <option>Lagos</option>\n          </Input>\n        </InputGroup>\n        <InputGroup className=\"mb-3\">\n          <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText><span role=\"img\" aria-label=\"name\">&#9873;</span></InputGroupText>\n          </InputGroupAddon>\n          <Input type=\"select\" id=\"country\" value={country} onChange={this.handleChange} disabled>\n            <option>Nigeria</option>\n            <option>Ghana</option>\n            <option>Kenya</option>\n          </Input>\n        </InputGroup>\n        <span className=\"error\">{notification}</span> <br /><br />\n        <Button type=\"submit\" color=\"success\" block>{buttonText}</Button>\n      </Form>\n    )\n  }\n\n  handleChange(e) {\n    this.setState(\n      {\n        [e.target.id]: e.target.value\n      }\n    );\n  };\n\n  latLngPicker(state) {\n    return {\n      'Abuja': '{ \"lat\": 9.083349, \"lng\": 7.536111 }',\n      'Ibadan': '{ \"lat\":7.442969, \"lng\": 3.894776 }',\n      'Lagos': '{ \"lat\":6.606204, \"lng\": 3.347276 }'\n    }[state];\n  }\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let json;\n    const { email, phoneNumber, name, gender, birthday, state, country, companyName, address, formFor } = this.state;\n    const regDate = new Date();\n    const month = regDate.getUTCMonth() + 1;\n    const day = regDate.getUTCDate();\n    const year = regDate.getUTCFullYear();\n    const newdate = year + \"-\" + month + \"-\" + day;\n    formFor === 'customer' ? (\n      json = JSON.stringify({ email, phoneNumber, name, gender, birthday, \"defaultAddress\": `${state} State, ${country} (Please change)`, \"defaultLatLng\": this.latLngPicker(state), state, country })) :\n      (json = JSON.stringify({ email, phoneNumber, \"name\": companyName, gender, \"birthday\": newdate, \"defaultAddress\": address, \"defaultLatLng\": this.latLngPicker(state), state, country }));\n    let formData = new FormData();\n    formData.append('request', 'register');\n    formData.append('user_type', formFor);\n    formData.append('data', encodeURIComponent(json));\n    let { sendFetchData } = this.props;\n    sendFetchData(formData);\n  };\n\n\n  componentDidMount() {\n    const { resetUserData } = this.props;\n    if (getAuthEmail() && getAuthUserType()) {\n      this.props.history.push('/order');\n    } else {\n      resetUserData();\n    }\n  };\n\n  componentDidUpdate(prevProps) {\n    let { userloading, userData } = this.props.userData;\n    if (this.props !== prevProps) {\n      console.log(userData)\n      if (userData.length !== 0) {\n        if (userData.error === 'false' && userloading === 'done') {\n          this.props.history.push('/message', { data: \"registration_success\" })\n        };\n      };\n    };\n  };\n\n  render() {\n    let customerTab, agentTab;\n    if (this.state.activeTab[0] === '1') {\n      customerTab = this.form('customer');\n      agentTab = '';\n    } else {\n      customerTab = '';\n      agentTab = this.form('agent');\n    }\n\n    return (\n      <div className=\"app flex-row align-items-center background_image\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col xs=\"12\" sm=\"12\" md=\"9\" lg=\"7\" xl=\"6\">\n              <br />\n              <Card className=\"mx-6\">\n                <CardBody className=\"p-4\">\n                  <h1>Register</h1>\n                  <p className=\"text-muted\">Create your account</p>\n                  <Nav tabs>\n                    <NavItem style={{ width: '50%', textAlign: 'center' }}>\n                      <NavLink\n                        active={this.state.activeTab[0] === '1'}\n                        onClick={() => { this.toggle('1', 'customer'); }}\n                      >\n                        Customer\n                </NavLink>\n                    </NavItem>\n                    <NavItem style={{ width: '50%', textAlign: 'center' }} title=\"disabled\">\n                      <NavLink\n                        active={this.state.activeTab[0] === '2'}\n                        onClick={() => { this.toggle('2', 'agent'); }}\n                      >\n                        Agent\n                </NavLink>\n                    </NavItem>\n                  </Nav>\n                  <TabContent activeTab={this.state.activeTab[0]}>\n                    <TabPane tabId=\"1\">\n                      {customerTab}\n                    </TabPane>\n                    <TabPane tabId=\"2\">\n                      {agentTab}\n                    </TabPane>\n                  </TabContent>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  };\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userData: state.userData\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    resetUserData: () => dispatch(resetUserData()),\n    sendFetchData: (data) => dispatch(sendFetchAccountData(data))\n  };\n};\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(Register);","import React, { Component } from 'react'\nimport { Button, Col, Container, Row, Input } from 'reactstrap';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { getAuthEmail, getAuthUserType } from '../../../services/Auth';\nimport { sendFetchAccountData, resetUserData } from '../../../store/actions/user';\n\nclass Message extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      screen: '',\n      email: ''\n    }\n    this.changeDisplayOpt = this.changeDisplayOpt.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  changeDisplayOpt(screen) {\n    this.setState(\n      {\n        screen\n      }\n    );\n  };\n\n  handleChange(e) {\n    this.setState(\n      {\n        [e.target.id]: e.target.value\n      }\n    );\n  };\n\n  componentDidMount() {\n    const { resetUserData } = this.props;\n    if (getAuthEmail() && getAuthUserType()) {\n      this.props.history.push('/order');\n    } else {\n      resetUserData();\n      if (this.props.location.state !== undefined) {\n        if (this.props.location.state.data === \"registration_success\") {\n          this.props.history.replace('/message', { data: \"\" });\n          this.changeDisplayOpt('registration_success');\n        };\n      };\n    }\n  };\n\n  componentDidUpdate(prevProps) {\n    let { userloading, userData } = this.props.userData;\n    if (this.props !== prevProps) {\n      if (userData.length !== 0) {\n        // console.log(userData);\n        if (userData.error === 'false' && userloading === 'done') {\n          this.changeDisplayOpt('password_reset_success');\n        };\n      };\n    };\n  };\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { email } = this.state;\n    let data = JSON.stringify({ email });\n    let formData = new FormData();\n    formData.append('request', 'reset_pass');\n    formData.append('data', encodeURIComponent(data));\n    let { sendFetchData } = this.props;\n    sendFetchData(formData);\n  };\n\n  render() {\n    let dataDisplayed = '';\n    let buttonText = '';\n    let notification = '';\n    const { screen , email } = this.state;\n    const { userloading, error, errorMessage, userData } = this.props.userData;\n    error === 'true' && errorMessage !== '' ? (notification = errorMessage)\n      : (userData.error === 'true' ? (notification = userData.errorMessage) : (notification = ''));\n    userloading === 'done' ? (buttonText = 'RESET PASSWORD') :\n      (userloading === 'true' ? (buttonText = <div id=\"loader\"></div>) : (buttonText = 'RESET PASSWORD'));\n\n    switch (screen) {\n      case 'password_reset_success':\n        dataDisplayed = <>\n          <br />\n          <h3 align=\"center\"> Password Reset Successful</h3><br />\n          <h5 style={{ backgroundColor: '#e0f0d7', padding: '0.7em', borderRadius: '0.5em' }}> <span role=\"img\" className=\"check_mark\"> &#10004;</span>Your password has been sent to your email address.</h5> <br />\n          <h5>Click <Link to=\"/login\">here</Link> to return to the login page</h5><br />\n        </>;\n        break;\n      case 'registration_success':\n        dataDisplayed = <>\n          <div className=\"clearfix\" >\n            <br />\n            <h6 className=\"float-left display-4\"><span role=\"img\" aria-label=\"confirmed\" className=\"check_mark\"> &#10004;</span></h6>\n            <h5 className=\"pt-3\">Registered Successfully!</h5>\n            <p>Check your email for login details</p>\n            <h5>Click <Link to=\"/login\">here</Link> to return to the login page</h5><br />\n          </div>\n        </>;\n        break;\n      default:\n        dataDisplayed = <>\n          <form onSubmit={this.handleSubmit}>\n            <br />\n            <h3 align=\"center\"> Password Assistant</h3><br />\n            <h5> <span role=\"img\" aria-label=\"issue\" style={{ fontSize: '2em', marginRight: '0.5em' }}>😅</span> Please enter the email address associated with your account.\n            We will send you a new password!</h5> <br />\n            <Input type=\"text\" id=\"email\" value={email} onChange={this.handleChange} placeholder=\"Email\" autoComplete=\"email\" required />\n            <span className=\"error\">{notification}</span> <br /><br /><br/>\n            <Button type=\"submit\" color=\"success\" block>{buttonText}</Button> <br />\n          </form>\n        </>;\n        break;\n    };\n\n\n    return (\n      <div className=\"app flex-row align-items-center background_image\">\n        <Container>\n          <Row className=\"justify-content-center\" style={{ backgroundColor: 'white', borderRadius: '1em', border: '1px solid darkgrey' }}>\n            <Col>\n              {dataDisplayed}\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  };\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userData: state.userData\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    resetUserData: () => dispatch(resetUserData()),\n    sendFetchData: (data) => dispatch(sendFetchAccountData(data))\n  };\n};\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(Message);","export const customer = {\n  items: [\n    {\n      name: 'My Account',\n      url: '/account',\n      icon: 'fa fa-user'\n    },\n    {\n      name: 'Order',\n      url: '/order',\n      icon: 'fa fa-cart-plus'\n    },\n    {\n      name: 'Community',\n      url: '/community',\n      icon: 'fa fa-globe'\n    },\n    {\n      name: 'History',\n      url: '/history',\n      icon: 'fa fa-history'\n    },\n    {\n      name: 'Support',\n      url: '/support',\n      icon: 'fa fa-question-circle'\n    },\n    {\n      name: 'About',\n      url: '/about',\n      icon: 'fa fa-info-circle'\n    }\n  ]\n};\n\nexport const agent = {\n  items: [\n    {\n      name: 'My Account',\n      url: '/account',\n      icon: 'fa fa-user'\n    },\n    {\n      name: 'Pickups',\n      url: '/pickups',\n      icon: 'fa fa-truck',\n      children: [\n        {\n          name: 'New',\n          url: '/pickups/new',\n          icon: 'fa fa-plus-circle'\n        },\n        {\n          name: 'Pending',\n          url: '/pickups/pending',\n          icon: 'fa fa-pause-circle-o'\n        }\n      ]\n    },\n    {\n      name: 'History',\n      url: '/history',\n      icon: 'fa fa-history'\n    },\n    {\n      name: 'Support',\n      url: '/support',\n      icon: 'fa fa-question-circle'\n    }\n  ]\n};\n\nexport const admin = {\n  items: [\n    {\n      name: 'My Account',\n      url: '/account',\n      icon: 'fa fa-user'\n    },\n    {\n      name: 'Agents',\n      url: '/agent',\n      icon: 'fa fa-users'\n    },\n    {\n      name: 'Communty',\n      url: '/communty',\n      icon: 'fa fa-globe',\n      children: [\n        {\n          name: 'Add',\n          url: '/community/edit',\n          icon: 'fa fa-plus-circle'\n        },\n        {\n          name: 'Review',\n          url: '/community',\n          icon: 'fa fa-eye'\n        }\n      ]\n    },\n    {\n      name: 'Customer',\n      url: '/customer',\n      icon: 'fa fa-male'\n    }\n  ]\n};","import React, { Component } from 'react';\n// import Dashboard from '../Dashboard'\nimport { Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport bag from '../../assets/garbage_bag.jpg';\nimport { getOrderQty, setOrderQty } from '../../services/Auth';\n// import { isAuthEmail, authenticateUser, isAuthUserType } from '../../services/Auth'\n\nclass Order extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      quantity: 2,\n      price: 400,\n      transportFee: 100,\n      total: 500,\n      notification: ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    let Qty;\n    const { quantity } = this.state;\n    switch (e.target.id) {\n      case 'minus':\n        if (quantity > 2) {\n          Qty = quantity - 1;\n          setOrderQty(Qty);\n          this.setState({\n            quantity: Qty,\n            price: Qty * 200,\n            transportFee: Qty * 50,\n            total: (Qty * 50) + (Qty * 200)\n          });\n        } else {\n          this.setState({\n            notification: 'Minimum order recieved'\n          });\n        }\n        break;\n      case 'plus':\n        if (quantity < 30) {\n          Qty = quantity + 1;\n          setOrderQty(Qty);\n          this.setState({\n            quantity: Qty,\n            price: Qty * 200,\n            transportFee: Qty * 50,\n            total: (Qty * 50) + (Qty * 200)\n          });\n        } else {\n          this.setState({\n            notification: 'Maximum order recieved'\n          });\n        }\n        break;\n      default:\n        setOrderQty(2);\n        this.setState({\n          quantity: 2,\n          price: 400,\n          transportFee: 100,\n          total: 500,\n          notification: ''\n        });\n        break;\n    }\n  }\n\ncomponentDidMount() {\n  if (getOrderQty()) {\n    this.setState({\n      quantity: getOrderQty()*1,\n      price: getOrderQty() * 200,\n      transportFee: getOrderQty() * 50,\n      total: (getOrderQty() * 50) + (getOrderQty() * 200)\n    });\n  } else {\n    setOrderQty(2);\n  }\n\n\n};\n\n\nrender() {\n  const { quantity, price, transportFee, total } = this.state;\n  return (\n    <React.Fragment>\n      <Row>\n        <div className=\"order_content\">\n          <div className=\"bag\">\n            <p className=\"bag-head\"><span className=\"uppercase\">Your Bag</span> - {quantity} item</p>\n          </div>\n          <div className=\"bag-product\">\n            <div className=\"image\">\n              <img src={bag} className=\"product-image\" alt=\"waste bag\" />\n            </div>\n            <div className=\"description\">\n              {/* <p className=\"muted\">Order code: SS022592000</p> */}\n              <br />\n              <span className=\"invinsible_hr\"></span>\n              <span className=\"h1\">Waste Bag Pickup</span>\n              <p className=\"blur\">Type: Standard plastic bag</p>\n              <p className=\"description-text\">Select quantity according to plastic bag in description.</p>\n              <p className=\"blur\">Bag size: 0.5m x 0.5m</p>\n              <span className=\"h1\">₦{price}.00</span>\n              <div className=\"quantity-wrapper\">\n                <div className=\"increase_wrapper\">\n                  <span className=\"incremento\">\n                    <button type=\"button\" name=\"button\" id=\"minus\" onClick={this.handleChange} className=\"but\"><span id=\"minus\" role=\"img\" aria-label=\"minus\"> &#10134;</span></button>\n                    <label htmlFor=\"quantity\"></label>\n                    <span className=\"quantity\">{quantity}</span>\n                    {/* <Input type=\"text\" id=\"quantity\" maxLength=\"3\" value={'100'} name=\"location\" className=\"quantity\" /> */}\n                    <button type=\"button\" name=\"button\" id=\"plus\" onClick={this.handleChange} className=\"but\"><span id=\"plus\" role=\"img\" aria-label=\"plus\"> &#10133;</span></button>\n                  </span>\n                </div>\n                <button id=\"del\" className=\"btn-remove uppercase\" onClick={this.handleChange}><span id=\"del\" role=\"img\" aria-label=\"del\">&#128465; del</span></button>\n              </div>\n            </div>\n          </div>\n          <div className=\"bag-total\">\n            <div className=\"subtotal\">\n              <p className=\"\">Subtotal:</p>\n              <p className=\"\">₦{price}.00</p>\n            </div>\n            <div className=\"delivery\">\n              <p className=\"\">Pickup in (8 working days):</p>\n              <p className=\"\">₦{transportFee}.00</p>\n            </div>\n            <hr />\n            <div className=\"total\">\n              <h3>Total:</h3>\n              <h3>₦{total}.00</h3>\n            </div>\n            <Link to=\"/order/summary\"><button className=\"btn-go-checkout uppercase\"> Checkout</button></Link>\n          </div>\n        </div>\n      </Row>\n\n    </React.Fragment>\n  )\n}\n}\n\nexport default Order;","import React from 'react'\nimport { AppSwitch } from '@coreui/react'\nimport { Input, Row, FormGroup, Form } from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { sendFetchAccountData } from '../../store/actions/user';\nimport { htmlspecialchars_decode, stringRepAll } from '../../utils/utilityFunction'\nimport { setAuthToken, getAuthUserAll, setAuthLatLng, signOut } from '../../services/Auth';\n\nclass CustomerMap extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      defaultAddressBox: '',\n      defaultLatLng: { lat: 6.60954222424663, lng: 3.370920970651687 },\n      searchBox: '',\n      addressBox: '',\n      phone: '',\n      newLatLng: '',\n      pickupStateCountry: '',\n      setAsDefault: false,\n      notification: '',\n      notifDisplay: 'none',\n    };\n    this.googleMapRef = React.createRef();\n    this.initAutocomplete = this.initAutocomplete.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleMapChange = this.handleMapChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.close = this.close.bind(this);\n  }\n\n  close() {\n    this.setState({\n      notifDisplay: 'none'\n    });\n  }\n\n  handleMapChange(value) {\n    this.setState(value);\n  }\n\n  handleChange(e) {\n    switch (e.target.id) {\n      case 'pac-input':\n        this.setState({\n          searchBox: e.target.value\n        });\n        break;\n      case 'customer_address':\n        this.setState({\n          addressBox: e.target.value\n        });\n        break;\n      case 'phone':\n        this.setState({\n          phone: e.target.value\n        });\n        break;\n      case 'address_switch':\n        this.setState({\n          setAsDefault: e.target.checked\n        });\n        break;\n      default:\n        break;\n    };\n  }\n\n  initAutocomplete() {\n    const { defaultLatLng } = this.state;\n    let map, infoWindow, marker, markers, geoCodeValue;\n    const google = window.google;\n    const mapToState = this.handleMapChange;\n    let myLatlng = defaultLatLng;\n    infoWindow = new window.google.maps.InfoWindow();\n    map = new google.maps.Map(this.googleMapRef.current, {\n      center: myLatlng,\n      zoom: 13,\n      mapTypeId: 'roadmap'\n    });\n\n    map.addListener('click', (mapsMouseEvent) => {\n      // Close the current InfoWindow.\n      infoWindow.close();\n      // Create a new InfoWindow.\n      markers.forEach((marker) => {\n        marker.setMap(null);\n      });\n\n      geoCode(mapsMouseEvent.latLng);\n      console.log(mapsMouseEvent.latLng.toString());\n    });\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        let pos = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n\n        markers.forEach((marker) => {\n          marker.setMap(null);\n        });\n        markers = [];\n        // markers.push(marker);\n        if (pos.length !== undefined) {\n          geoCode(pos);\n          console.log('navigation working');\n        } else {\n          handleLocationError(true, infoWindow, map.getCenter());\n        }\n        map.setCenter(pos);\n      }, () => {\n        handleLocationError(true, infoWindow, map.getCenter());\n      });\n\n    } else {\n      // Browser doesn't support Geolocation\n      handleLocationError(false, infoWindow, map.getCenter());\n    }\n    function handleLocationError(browserHasGeolocation, infoWindow, pos) {\n      infoWindow.setPosition(pos);\n      infoWindow.setContent(browserHasGeolocation ?\n        'Error: The Geolocation service failed.' :\n        'Error: Your browser doesn\\'t support geolocation.');\n      infoWindow.open(map);\n    }\n\n    // Create the search box and link it to the UI element.\n    const input = document.getElementById('pac-input');\n    let searchBox = new google.maps.places.SearchBox(input);\n    map.addListener('bounds_changed', () => {\n      searchBox.setBounds(map.getBounds());\n    });\n\n    markers = [];\n    // Listen for the event fired when the user selects a prediction and retrieve\n    // more details for that place.\n    searchBox.addListener('places_changed', () => {\n      let places = searchBox.getPlaces();\n      let pickupStateCountry = '';\n      if (places.length === 0) {\n        return;\n      }\n      // console.log(object)\n      // mapToState({ addressBox: places[0].formatted_address });\n      pickupStateCountry = places[0].address_components[places[0].address_components.length - 2].long_name + ', ' +\n        places[0].address_components[places[0].address_components.length - 1].long_name;\n\n      // Clear out the old markers.\n      markers.forEach((marker) => {\n        marker.setMap(null);\n      });\n      markers = [];\n\n      // For each place, get the icon, name and location.\n      let bounds = new google.maps.LatLngBounds();\n      places.forEach((place) => {\n        if (!place.geometry) {\n          console.log(\"Returned place contains no geometry\");\n          return;\n        }\n        mapToState({ addressBox: places[0].name + ', ' + places[0].vicinity, newLatLng: place.geometry.location.toString(), pickupStateCountry });\n        // console.log(place.geometry.location + places[0].formatted_address);\n        // Create a marker for each place.\n        markers.push(new google.maps.Marker({\n          map: map,\n          title: place.name,\n          position: place.geometry.location\n        }));\n\n        if (place.geometry.viewport) {\n          // Only geocodes have viewport.\n          bounds.union(place.geometry.viewport);\n        } else {\n          bounds.extend(place.geometry.location);\n        }\n        map.setCenter(place.geometry.location);\n      });\n      map.fitBounds(bounds);\n      map.setZoom(17);\n    });\n\n    function geoCode(latitudeLogitude) {\n      let geocoder = new google.maps.Geocoder();\n      geocoder.geocode({ 'location': latitudeLogitude }, (results, status) => {\n        let notification = 'No address results found. Please fill it in';\n        let notifDisplay = 'block';\n        let pickupStateCountry = '';\n        geoCodeValue = '';\n        if (status === 'OK') {\n          if (results[0]) {\n            map.setZoom(17);\n            marker = new google.maps.Marker({\n              position: latitudeLogitude,\n              map: map,\n              title: results[0].formatted_address\n            });\n            markers.push(marker);\n            infoWindow.setPosition(latitudeLogitude);\n            infoWindow.setContent('Is this your location? <br/> click on map to change');\n            infoWindow.open(map, marker);\n            geoCodeValue = results[0].formatted_address;\n            if (geoCodeValue === undefined) {\n              geoCodeValue = '';\n            } else {\n              notification = '';\n              notifDisplay = 'none';\n            }\n            // console.log(results[0].address_components[results[0].address_components.length - 2].long_name + \n            //   results[0].address_components[results[0].address_components.length - 1].long_name);\n            pickupStateCountry = results[0].address_components[results[0].address_components.length - 2].long_name + ', ' +\n              results[0].address_components[results[0].address_components.length - 1].long_name;\n            // console.log(results)\n          }\n        } else {\n          notification = 'Geocoder failed due to: ' + status + '. Please fill in the address field';\n          // window.alert('Geocoder failed due to: ' + status);\n        }\n        mapToState({ addressBox: geoCodeValue, newLatLng: latitudeLogitude, notifDisplay, notification, pickupStateCountry })\n      });\n    }\n\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { defaultAddressBox, addressBox, newLatLng, setAsDefault, pickupStateCountry, phone } = this.state;\n    const pickupLatLng = stringRepAll({ \"(\": '{\"lat\": ', \")\": '}', \" \": ' \"lng\": ' }, newLatLng);\n    const { id, user_type, findBy, token } = getAuthUserAll();\n    if ((defaultAddressBox === addressBox && setAsDefault === false) || (newLatLng === '' && setAsDefault === false) ||\n      (addressBox === '' && setAsDefault === false)) {\n      this.setState({ notifDisplay: 'block', notification: 'Please type in the address box, or zoom into the map to select a marker!' });\n    } else {\n      if (pickupLatLng === '' || pickupStateCountry === '') {\n        this.setState({\n          notifDisplay: 'block',\n          notification: 'Please use the search box or point on the map'\n        })\n      } else {\n        const { sendFetchData } = this.props\n        const pickupAddress = addressBox;\n        const data = JSON.stringify({ id, findBy, token, setAsDefault, pickupAddress, pickupLatLng, pickupStateCountry, phone });\n        if (setAsDefault === true) {\n          setAuthLatLng(pickupLatLng);\n        }\n        let formData = new FormData();\n        formData.append('request', 'change_pickupAddress');\n        formData.append('user_type', user_type);\n        formData.append('data', encodeURIComponent(data));\n        sendFetchData(formData);\n        // console.log(data)\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.location.data !== undefined) {\n      const { address, latLng, phone, turnOn } = this.props.location.data;\n      const defaultAddressBox = htmlspecialchars_decode(address);\n      const defaultLatLng = JSON.parse(htmlspecialchars_decode(latLng));\n      this.setState({ defaultAddressBox, defaultLatLng, addressBox: defaultAddressBox, phone, setAsDefault: turnOn });\n    }\n    const script = document.getElementById('googleMapScript');\n    if (document.contains(script)) {\n      this.initAutocomplete()\n      return null;\n    }\n    let googleScript = document.createElement('script');\n    // due to theft and billing, use your google map api key or contact @johnerry on git or fashanutosin7@gmail.com for 1 day test key\n    googleScript.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyBKHdFymwu91lTBTQBDgltrFaXPD6TxY2g&libraries=places';\n    googleScript.async = true;\n    googleScript.setAttribute('id', 'googleMapScript');\n    window.document.body.appendChild(googleScript);\n    googleScript.addEventListener('load', this.initAutocomplete);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props !== prevProps) {\n      const { userloading, userData } = this.props.userData;\n      if (userData.length !== 0) {\n        if (userData.error === 'false' && userloading === 'done') {\n          setAuthToken(userData.data[0].token);\n          this.props.history.goBack();\n        } else {\n          if (userData.logoutUser === 'true') {\n            signOut();\n          }\n          this.setState({\n            notifDisplay: 'block',\n            notification: userData.errorMessage\n          });\n        }\n      };\n    };\n  };\n\n\n\n  render() {\n    const { searchBox, addressBox, notifDisplay, notification, phone, setAsDefault } = this.state\n    let buttonText = '';\n    const { userloading } = this.props.userData;\n    userloading === 'done' ? (buttonText = 'SAVE') :\n      (userloading === 'true' ? (buttonText = <div id=\"loader\"></div>) : (buttonText = 'SAVE'));\n    return (\n      <Row>\n        <div className=\"container_map\">\n          <div id=\"map\" ref={this.googleMapRef}></div>\n          <Form onSubmit={this.handleSubmit} method=\"post\">\n            <FormGroup>\n              <Input id=\"pac-input\" value={searchBox} onChange={this.handleChange} className=\"controls\" type=\"text\" placeholder=\"Search\" />\n              <span id=\"switch\" title=\"Set as default address\"><AppSwitch onChange={this.handleChange} id=\"address_switch\" className={'mx-1'} variant={'3d'} color={'primary'} size={'sm'} checked={setAsDefault} /></span>\n            </FormGroup>\n            <FormGroup>\n              <Input id=\"phone\" value={phone} style={{ maxWidth: '18em', border: '0.13em solid lightgrey', color: 'black', fontSize: '1.2em' }} type=\"number\" onChange={this.handleChange} placeholder=\"Phone\" required />\n            </FormGroup>\n            <FormGroup>\n              <Input className=\"account_address\" id=\"customer_address\" value={addressBox} onChange={this.handleChange} type=\"textarea\" placeholder=\"Adress  ( use google map, then type in additional information here )\" required />\n            </FormGroup>\n            <button type=\"submit\" className=\"btn_save btn\">{buttonText}</button>\n          </Form>\n        </div>\n        <div className=\"notif\" style={{ display: notifDisplay }}>{notification}<span role=\"img\" aria-label=\"sheep\" onClick={this.close}>&#x274E;</span> </div>\n      </Row>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userData: state.userData\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendFetchData: (data) => dispatch(sendFetchAccountData(data))\n  };\n};\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(CustomerMap);\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios'\r\nimport { SET_ORDER } from './actionTypes';\r\nimport { userUiStartLoading, userUiStopLoading } from './ui';\r\n\r\nexport const setOrder = (order) => ({\r\n  type: SET_ORDER,\r\n  order\r\n});\r\n\r\nexport const fetchOrderDataRequest = () => ({ type: \"FETCH_ORDER_DATA_REQUEST\" });\r\nexport const fetchOrderDataSuccess = (orderData) => ({ type: \"FETCH_ORDER_DATA_SUCCESS\", payload: orderData });\r\nexport const fetchOrderDataFailure = (error) => ({ type: \"FETCH_ORDER_DATA_FAILURE\", payload: error });\r\n\r\nexport const resetOrderData = () => async (dispatch) => {\r\n  dispatch({type: 'RESET_ORDER_DATA'});\r\n}\r\n\r\nexport const sendFetchOrderData = (data) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchOrderDataRequest());\r\n    axios.post('https://swiip.000webhostapp.com/order.php', data, {\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      }\r\n    }).then(response => {\r\n        const orderData = response.data;\r\n        // console.log(data);\r\n        dispatch(fetchOrderDataSuccess(orderData));\r\n      })\r\n      .catch(error => {\r\n        const errorMessage = error.message;\r\n        // console.log('fail');\r\n        dispatch(fetchOrderDataFailure(errorMessage));\r\n      })\r\n\r\n  } catch (error) {\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport const getOrder = () => async (dispatch) => {\r\n  try {\r\n    // Make UI start loading was request started\r\n    dispatch(userUiStartLoading());\r\n    // Make necessary request to get the order, e.g\r\n    // const res = await axios.get(`/order`);\r\n\r\n    // Stop UI loading after response has been gotten\r\n    dispatch(userUiStopLoading());\r\n    // Performs necessary request after order has been gotten, e.g\r\n    // Success:\r\n    // if (res.success) {\r\n    //   dispatch(setOrder(res.body));\r\n    //   return null;\r\n    // }\r\n    // Failure, Unauthorized:\r\n    // if (res.status === 401) {\r\n    //   dispatch(resetApp());\r\n    //   return 0;\r\n    // }\r\n  } catch (error) {\r\n    dispatch(userUiStopLoading());\r\n    // If error occurs in getting order, e.g\r\n    // return 'Something went wrong. Check your connection.';\r\n  }\r\n};\r\n","import React, { Component } from 'react'\r\n\r\nexport class PayStack extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        // this.state = {\r\n        //     orderRef: '',\r\n        //     notification: '',\r\n        //     notifDisplay: 'none'\r\n        // }\r\n        this.payWithPaystack = this.payWithPaystack.bind(this);\r\n    }\r\n    \r\n\r\n    componentDidMount() {\r\n        let payStackScript = document.createElement('script');\r\n        payStackScript.src = 'https://js.paystack.co/v1/inline.js';\r\n        payStackScript.async = true;\r\n        window.document.body.appendChild(payStackScript);\r\n    }\r\n\r\n    payWithPaystack() {\r\n        const { email , lastName, firstName, total, saveOrder } = this.props.data;\r\n        let handler = window.PaystackPop.setup({\r\n            key: 'pk_test_6dfeae22bb437ba7de70c661408240369aaa8996',\r\n            email: email,\r\n            amount: total * 100,\r\n            firstname: firstName,\r\n            lastname: lastName,\r\n            onClose: function () {\r\n                \r\n            },\r\n            callback: function (response) {\r\n                saveOrder(response.reference);\r\n                // let message = 'Payment complete! Reference: ' + response.reference;\r\n            }\r\n        });\r\n        handler.openIframe();\r\n    }\r\n\r\n\r\n    render() {\r\n        const { button } = this.props.data;\r\n        return (\r\n            <>\r\n                <button type=\"submit\" className={button[0]} onClick={this.payWithPaystack} disabled={button[3]}> <i className={button[1]}></i> &nbsp; {button[2]}</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default PayStack\r\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { getOrderQty, setAuthToken, getAuthUserAll, getAuthUserType, setOrderQty, signOut } from '../../services/Auth';\nimport { sendFetchAccountData } from '../../store/actions/user';\nimport { sendFetchOrderData } from '../../store/actions/order';\nimport { htmlspecialchars_decode } from '../../utils/utilityFunction'\nimport {\n  Button,\n  Row\n} from 'reactstrap';\nimport PayStack from '../../components/Payment/PayStack';\n\nclass Summary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modal: false,\n      quantity: '2',\n      price: 400,\n      transportFee: 100,\n      total: 500,\n      email: '',\n      firstName: '',\n      lastName: '',\n      fullName: '',\n      phone: '',\n      address: '',\n      stateCountry: '',\n      latLng: '',\n      notification: 'Please log out and log back in',\n      notifDisplay: 'none'\n    };\n    this.toggle = this.toggle.bind(this);\n    this.close = this.close.bind(this);\n    this.saveOrder = this.saveOrder.bind(this)\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal,\n    });\n  }\n\n  close() {\n    this.setState({\n      notifDisplay: 'none'\n    });\n  }\n\n  genericState(data) {\n    const { email, name, defaultAddress, pickupAddress, pickupLatLng, pickupStateCountry, state, country, phone, defaultLatLng } = data;\n    let address = pickupAddress;\n    let latLng = pickupLatLng;\n    let stateCountry = pickupStateCountry;\n    if (address === '') {\n      address = defaultAddress;\n      latLng = defaultLatLng;\n      stateCountry = state + ', ' + country;\n    }\n    let nameExplode = name.trim().split(/ (.+)/);\n    if (nameExplode[1] === undefined) {\n      nameExplode[1] = nameExplode[0];\n    }\n    this.setState({\n      email,\n      phone,\n      lastName: nameExplode[0],\n      firstName: nameExplode[1],\n      fullName: name,\n      address,\n      stateCountry,\n      latLng\n    });\n  }\n\n  saveOrder(orderRef) {\n    const { quantity, total, email, phone, fullName ,address, stateCountry, latLng } = this.state;\n    const json = JSON.stringify({ \"personOf\": fullName, phone, email, orderRef, \"defaultAddress\": address,\n      stateCountry, \"assignedAgent\": \"pending\", \"status\": \"pending\", \"amount\": total.toString(), \"orderQty\": quantity,\n      \"pickupAddress\": address, \"latLng\": htmlspecialchars_decode(latLng), ...getAuthUserAll()\n    });\n    let formData = new FormData();\n    formData.append('request', 'new_order');\n    formData.append('user_type', getAuthUserType());\n    formData.append('data', encodeURIComponent(json));\n    let { sendOrderData } = this.props;\n    sendOrderData(formData);\n    // console.log(json);\n  }\n\n  componentDidMount() {\n    // console.log(getOrderQty())\n    if (getOrderQty()) {\n      this.setState({\n        quantity: getOrderQty(),\n        price: getOrderQty() * 200,\n        transportFee: getOrderQty() * 50,\n        total: (getOrderQty() * 50) + (getOrderQty() * 200)\n      });\n    } else {\n      setOrderQty(2);\n    }\n\n    const data = JSON.stringify(getAuthUserAll());\n    const { sendFetchData, userData } = this.props\n    if (userData.userData.length === 0) {\n      let formData = new FormData();\n      formData.append('request', 'get_user');\n      formData.append('user_type', getAuthUserType());\n      formData.append('data', encodeURIComponent(data));\n      sendFetchData(formData);\n    } else {\n      // const { token, email, name, address, state, country, phone } = userData.userData.data[0];\n      this.genericState(userData.userData.data[0]);\n      // console.log(userData);\n    }\n  };\n\n  componentDidUpdate(prevProps) {\n    const { userloading, userData } = this.props.userData;\n    const { orderloading, orderData } = this.props.orderData;\n    if (this.props !== prevProps) {\n      // ORDER DATA\n      if (orderData.length !== 0) {\n        if (orderData.error === 'false' && orderloading === 'done') {\n          setAuthToken(orderData.token);\n          setOrderQty(2);\n          this.props.history.push('/order');\n        } else {\n          if (orderData.logoutUser === 'true') {\n            signOut();\n          }\n          this.setState({\n            notifDisplay: 'block',\n            notification: orderData.errorMessage\n          });\n        }\n      };\n\n      // USER DATA\n      if (userData.length !== 0) {\n        if (userData.error === 'false' && userloading === 'done') {\n          this.genericState(userData.data[0]);\n        } else {\n          this.setState({\n            notifDisplay: 'block',\n            notification: userData.errorMessage\n          });\n        }\n      };\n    };\n  };\n\n  render() {\n    const { quantity, price, email, transportFee, lastName, firstName, fullName, total, notification, phone, address, latLng, stateCountry, notifDisplay } = this.state;\n    // console.log(latLng)\n    return (\n      <React.Fragment>\n        <Row>\n          <div className=\"order_content\">\n            <div className=\"bag\">\n              <p className=\"bag-head\">Review order &nbsp; - {quantity} item</p>\n            </div>\n            <div className=\"summary_inline\">\n              <div className=\"summary_type summary_h1\">\n                Order\n              </div>\n              <div className=\"summary_detail\">\n                <span className=\"summary_h1\">Waste Bag Pickup</span>\n                {/* <p className=\"summary_muted\">Order code: SS022592000</p><br /> */}\n                <p className=\"blur\">Bag size: 0.5m x 0.5m</p><br />\n                <span className=\"h2\">Quantity:</span>\n                <span className=\"h2\"> &#10799;{quantity}</span>\n              </div>\n            </div>\n            <span className=\"hr\"></span>\n            <div className=\"summary_inline\">\n              <div className=\"summary_type summary_h1\">\n                Pickup <span style={{ color: '#20a8d8' }}>@</span>\n              </div>\n              <div className=\"summary_detail\">\n                <span className=\"h2\">{fullName}</span>\n                <span className=\"summary_text\">{address}</span>\n                <span className=\"summary_text\">{stateCountry}</span><br />\n                <span className=\"h2\">{phone}</span>\n                <span className=\"hr\"></span>\n                <Link to={{\n                  pathname: \"/account/address\",\n                  data: {\n                    address,\n                    latLng,\n                    phone,\n                    \"turnOn\": false\n                  }\n                }} key={latLng}><Button className=\"mr-1 change_address\"><span className=\"uppercase\">change address</span></Button></Link>\n              </div>\n            </div>\n            <div className=\"bag-total\">\n              <div className=\"subtotal\">\n                <p className=\"small\">Sub-total:</p>\n                <p className=\"small\">₦{price}.00</p>\n              </div>\n              <div className=\"delivery\">\n                <p className=\"small\">Pickup (Standard - 8 working days):</p>\n                <p className=\"small\">₦{transportFee}</p>\n              </div>\n              <hr />\n              <div className=\"total\">\n                <h3>Total:</h3>\n                <h3>₦{total}.00</h3>\n              </div>\n              <PayStack data={{ email, lastName, firstName, total, \"saveOrder\": this.saveOrder, \"button\": ['btn-go-checkout','fa fa-lock','PAY',false] }} />\n            </div>\n          </div>\n          <div className=\"notif\" style={{ display: notifDisplay }}>{notification}<span role=\"img\" aria-label=\"sheep\" onClick={this.close}>&#x274E;</span> </div>\n        </Row>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userData: state.userData,\n    orderData: state.orderData\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendFetchData: (data) => dispatch(sendFetchAccountData(data)),\n    sendOrderData: (data) => dispatch(sendFetchOrderData(data))\n  };\n};\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(Summary);","/* eslint-disable linebreak-style */\nimport axios from 'axios';\n// import { FETCH_COMMUNITY_DATA_REQUEST, FETCH_COMMUNITY_DATA_SUCCESS, FETCH_COMMUNITY_DATA_FAILURE } from './actionTypes';\n\nexport const fetchCommunityDataRequest = () => ({ type: \"FETCH_COMMUNITY_DATA_REQUEST\" });\nexport const fetchCommunityDataSuccess = (data) => ({ type: \"FETCH_COMMUNITY_DATA_SUCCESS\", payload: data });\nexport const fetchCommunityDataFailure = (error) => ({ type: \"FETCH_COMMUNITY_DATA_FAILURE\", payload: error });\n\n\nexport const sendCommunityData = (data) => async (dispatch) => {\n  try {\n    dispatch(fetchCommunityDataRequest());\n    axios.post('https://swiip.000webhostapp.com/community.php', data, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      }\n    }).then(response => {\n        const userData = response.data;\n        dispatch(fetchCommunityDataSuccess(userData));\n      })\n      .catch(error => {\n        const errorMessage = error.message;\n        dispatch(fetchCommunityDataFailure(errorMessage));\n      })\n\n  } catch (error) {\n\n  }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { sendCommunityData } from '../../store/actions/community'\nimport { Card, Col, Row, Progress } from 'reactstrap';\nimport { Link } from 'react-router-dom'\nimport { getAuthUserType, getAuthUserAll, setAuthToken, signOut } from '../../services/Auth'\nimport draftToHtml from 'draftjs-to-html';\nimport { htmlspecialchars_decode, StringToJSX } from '../../utils/utilityFunction'\n\nclass Community extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      notification: '',\n      notifDisplay: 'none',\n    }\n    this.close = this.close.bind(this);\n    this.changeState = this.changeState.bind(this);\n    this.deleting = this.deleting.bind(this);\n  }\n\n  close() {\n    this.setState({\n      notifDisplay: 'none',\n      notification: '',\n    });\n  }\n\n  changeState(object) {\n    this.setState(object);\n  }\n\n  componentDidMount() {\n    const { sendCommData, communityData } = this.props\n    if (communityData.communityData.length === 0 || communityData.communityData.data.length < 2) {\n      const data = JSON.stringify(getAuthUserAll());\n      if (communityData.communityData.length === 0) {\n        let formData = new FormData();\n        formData.append('request', 'get_comm_list');\n        formData.append('user_type', getAuthUserType());\n        formData.append('data', encodeURIComponent(data));\n        sendCommData(formData);\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { error, communityData } = this.props.communityData;\n    if (this.props !== prevProps) {\n      if (communityData.length !== 0) {\n        if (communityData.error === 'true') {\n          if (communityData.logoutUser === 'true') {\n            signOut();\n          }\n          this.changeState({\n            notifDisplay: 'block',\n            notification: communityData.errorMessage\n          });\n        } else if (communityData.submitted === 'true') {\n          setAuthToken(communityData.token);\n        }\n      } else {\n        if (error === 'true') {\n          this.changeState({\n            notifDisplay: 'block',\n            notification: 'Please refresh or try again later'\n          });\n        }\n      }\n    };\n  };\n\n  deleting(id) {\n    const { sendCommData } = this.props\n    const data = JSON.stringify({ ...getAuthUserAll(), \"commID\": id });\n    let formData = new FormData();\n    formData.append('request', 'del_comm');\n    formData.append('user_type', getAuthUserType());\n    formData.append('data', encodeURIComponent(data));\n    sendCommData(formData);\n  }\n\n\n  render() {\n    const { notifDisplay, notification } = this.state;\n    let { error, communityData } = this.props.communityData;\n    let commDisplay;\n    let button;\n    switch (getAuthUserType()) {\n      case 'customer':\n        button = (id) => {\n          return (<Link to={'/community/' + id}><div className=\"button\">\n            <button type=\"button\" name=\"button\" className=\"btn_donate btn delete\">donate</button>\n          </div></Link>)\n        };\n        break;\n      case 'admin':\n        button = (id) => {\n          return (<div className=\"button\">\n            <button className=\"delete btn\" onClick={() => this.deleting(id)}>Delete</button>\n            <Link to={'/community/edit/' + id}><button className=\"edit btn\">Edit</button></Link>\n          </div>)\n        };\n        break;\n      default:\n        button = (id) => { return ('') };\n        break;\n    }\n\n    if (communityData.length === 0 && error !== 'true') {\n      commDisplay = <div className=\"loader_con\"><div id=\"big_loader\"></div></div>;;\n    } else {\n      commDisplay = <Row style={{ overflow: 'hidden', padding: '0' }}>\n        {communityData.data && communityData.data.map(comm => {\n          let eachPara = comm.details;\n          let color;\n          let percentage = Math.round((comm.fundGotten / comm.fundNeeded) * 100) + 1;\n          percentage > 60 ? (color = 'success') : (color = 'red');\n          eachPara = draftToHtml(JSON.parse(htmlspecialchars_decode(htmlspecialchars_decode(eachPara))));\n          eachPara = eachPara.substring(0, eachPara.indexOf('<', 50)) + '...';\n          return (\n            <Col xs=\"12\" sm=\"6\" md=\"4\" key={comm.id} style={{ margin: '0 0 30px 0px', padding: '0.5em' }}>\n              <Card className=\"card__item\">\n                <Link to={'/community/' + comm.id}>\n                  <img src={comm.image} alt=\"\" className=\"card__image\" />\n                  <div className=\"card__content\">\n                    <div className=\"amount\"> <span>Fund needed:</span> ₦{comm.fundNeeded}</div>\n                    <Progress color={color} value={percentage} className=\"mb-3\">{percentage}%</Progress>\n                    <div className=\"card__title\"> {comm.location} </div>\n                    <StringToJSX domString={eachPara} className=\"card__text\" />\n                  </div>\n                </Link>\n                {button(comm.id)}\n              </Card>\n            </Col>\n          )\n        })}\n      </Row>;\n\n    }\n\n    return (\n      <React.Fragment>\n        <div className=\"community_container\">\n          {commDisplay}\n          <div className=\"notif\" style={{ display: notifDisplay }}>{notification}<span role=\"img\" aria-label=\"sheep\" onClick={this.close}>&#x274E;</span> </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    communityData: state.communityData\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendCommData: (data) => dispatch(sendCommunityData(data))\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps)\n)(Community);","import React, { Component } from 'react'\r\nimport { Row, Button } from 'reactstrap'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { getAuthUserAll, getAuthUserType, getAuthLatLng } from '../../services/Auth';\r\nimport { sendFetchOrderData } from '../../store/actions/order';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { htmlspecialchars_decode } from '../../utils/utilityFunction'\r\n\r\nexport class New extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            orderList: [],\r\n            notification: '',\r\n            notifDisplay: 'none',\r\n        }\r\n        this.close = this.close.bind(this);\r\n        this.changeState = this.changeState.bind(this);\r\n        this.sendMeto = this.sendMeto.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.genericState = this.genericState.bind(this);\r\n    }\r\n\r\n    close() {\r\n        this.setState({\r\n            notifDisplay: 'none',\r\n            notification: '',\r\n        });\r\n    }\r\n\r\n    changeState(object) {\r\n        this.setState(object);\r\n    }\r\n\r\n    sendMeto(data) {\r\n        const { personOf, email, phone, pickupAddress, pickupStateCountry, latLng } = data;\r\n        const defaultLatLng = JSON.parse(getAuthLatLng());\r\n        const route = JSON.parse(htmlspecialchars_decode(latLng));\r\n        this.props.history.push({\r\n            pathname: '/pickups/map',\r\n            data: {\r\n                personOf,\r\n                email,\r\n                phone,\r\n                pickupAddress,\r\n                pickupStateCountry,\r\n                defaultLatLng,\r\n                route\r\n            }\r\n        });\r\n    }\r\n\r\n    accept(id) {\r\n        const data = JSON.stringify({ \"orderID\": id, ...getAuthUserAll() });\r\n        const { sendOrderData } = this.props\r\n        let formData = new FormData();\r\n        formData.append('request', 'accept_order');\r\n        formData.append('user_type', getAuthUserType());\r\n        formData.append('data', encodeURIComponent(data));\r\n        sendOrderData(formData);\r\n    }\r\n\r\n    genericState(data) {\r\n        const orders = data.filter(order => order.status === 'pending');\r\n        this.changeState({\r\n            orderList: orders\r\n        });\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const data = JSON.stringify(getAuthUserAll());\r\n        const { sendOrderData, orderData } = this.props\r\n        if (orderData.orderData.length === 0) {\r\n            let formData = new FormData();\r\n            formData.append('request', 'get_order_history');\r\n            formData.append('user_type', getAuthUserType());\r\n            formData.append('data', encodeURIComponent(data));\r\n            sendOrderData(formData);\r\n        } else if (orderData.orderData.data !== undefined) {\r\n            this.genericState(orderData.orderData.data);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { orderData, error } = this.props.orderData;\r\n        if (this.props !== prevProps) {\r\n            // ORDER DATA\r\n            if (orderData.length !== 0) {\r\n                if (orderData.error === 'true') {\r\n                    this.changeState({\r\n                        notifDisplay: 'block',\r\n                        notification: orderData.errorMessage\r\n                    });\r\n                } else {\r\n                    this.genericState(orderData.data);\r\n                }\r\n            } else {\r\n                if (error === 'true') {\r\n                    this.changeState({\r\n                        notifDisplay: 'block',\r\n                        notification: 'Please refresh or try again later'\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n    render() {\r\n        let { notification, notifDisplay, orderList } = this.state;\r\n        let { error, orderData } = this.props.orderData;\r\n        let OrderDisplay;\r\n        if (orderData.length === 0 && error !== 'true') {\r\n            OrderDisplay = <div className=\"loader_con\"><div id=\"big_loader\"></div></div>;\r\n        } else {\r\n            OrderDisplay = <table className=\"table table-hover table-outline\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th className=\"text-center\" style={{ width: '4em' }}>No.</th>\r\n                        <th>New Order</th>\r\n                        <th className=\"\" style={{ width: '5em' }}>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {orderList && orderList.map((order, index) => {\r\n                        const { personOf, email, phone, pickupAddress, pickupStateCountry, latLng } = order;\r\n                        return (\r\n                            <tr key={index}>\r\n                                <td className=\"text-center\" >\r\n                                    {index + 1}.\r\n                                </td>\r\n                                <td >\r\n                                    <div className=\"tableAnchor\" onClick={() => this.sendMeto({\r\n                                        personOf, email, phone, pickupAddress, pickupStateCountry, latLng\r\n                                    })}>\r\n                                        <div className=\"table_address\">{pickupAddress}</div>\r\n                                        <span className=\"table_name\">{personOf}</span>\r\n                                    </div>\r\n                                    <div className=\"table_small_older\">\r\n                                        <a href={\"mailto:\" + email} className=\"table_email\">\r\n                                            {email}\r\n                                        </a>\r\n                                        <a href={\"tel:\" + phone} className=\"table_number\">\r\n                                            {phone}\r\n                                        </a>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <Button className=\"pick_button\" onClick={() => this.accept(order.id)}>Pick</Button>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        }\r\n        return (\r\n            <Row>\r\n                {OrderDisplay}\r\n                <div className=\"notif\" style={{ display: notifDisplay }}>{notification}<span role=\"img\" aria-label=\"sheep\" onClick={this.close}>&#x274E;</span> </div>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orderData: state.orderData\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendOrderData: (data) => dispatch(sendFetchOrderData(data))\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(New);","import React, { Component } from 'react'\r\nimport { Row } from 'reactstrap'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { getAuthUserAll, getAuthUserType, getAuthLatLng } from '../../services/Auth';\r\nimport { sendFetchOrderData } from '../../store/actions/order';\r\nimport { htmlspecialchars_decode, dateConstructor } from '../../utils/utilityFunction'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nexport class Pending extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            orderList: [],\r\n            notification: '',\r\n            notifDisplay: 'none',\r\n        }\r\n\r\n        this.close = this.close.bind(this);\r\n        this.changeState = this.changeState.bind(this);\r\n        this.sendMeto = this.sendMeto.bind(this);\r\n        this.genericState = this.genericState.bind(this);\r\n    }\r\n\r\n    close() {\r\n        this.setState({\r\n            notifDisplay: 'none',\r\n            notification: '',\r\n        });\r\n    }\r\n\r\n    changeState(object) {\r\n        this.setState(object);\r\n    }\r\n\r\n    sendMeto(data) {\r\n        const { personOf, email, phone, pickupAddress, pickupStateCountry, latLng } = data;\r\n        const defaultLatLng = JSON.parse(getAuthLatLng());\r\n        const route = JSON.parse(htmlspecialchars_decode(latLng));\r\n        this.props.history.push({\r\n            pathname: '/pickups/map',\r\n            data: {\r\n                personOf,\r\n                email,\r\n                phone,\r\n                pickupAddress,\r\n                pickupStateCountry,\r\n                defaultLatLng,\r\n                route\r\n            }\r\n        });\r\n    }\r\n\r\n    genericState(data) {\r\n        const orders = data.filter(order => order.status === 'accepted');\r\n        this.changeState({\r\n            orderList: orders\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const data = JSON.stringify(getAuthUserAll());\r\n        const { sendOrderData, orderData } = this.props\r\n        if (orderData.orderData.length === 0) {\r\n            let formData = new FormData();\r\n            formData.append('request', 'get_order_history');\r\n            formData.append('user_type', getAuthUserType());\r\n            formData.append('data', encodeURIComponent(data));\r\n            sendOrderData(formData);\r\n        } else if (orderData.orderData.data !== undefined) {\r\n            this.genericState(orderData.orderData.data);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { orderData, error } = this.props.orderData;\r\n        if (this.props !== prevProps) {\r\n            // ORDER DATA\r\n            if (orderData.length !== 0) {\r\n                if (orderData.error === 'true') {\r\n                    this.changeState({\r\n                        notifDisplay: 'block',\r\n                        notification: orderData.errorMessage\r\n                    });\r\n                } else {\r\n                    this.genericState(orderData.data);\r\n                }\r\n            } else {\r\n                if (error === 'true') {\r\n                    this.changeState({\r\n                        notifDisplay: 'block',\r\n                        notification: 'Please refresh or try again later'\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n    render() {\r\n        let { notification, notifDisplay, orderList } = this.state;\r\n        let { error, orderData } = this.props.orderData;\r\n        let OrderDisplay;\r\n        if (orderData.length === 0 && error !== 'true') {\r\n            OrderDisplay = <div className=\"loader_con\"><div id=\"big_loader\"></div></div>;\r\n        } else {\r\n            OrderDisplay = <table className=\"table table-hover table-outline\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th className=\"text-center\" style={{ width: '4em' }}>No.</th>\r\n                        <th>Address</th>\r\n                        <th className=\"\" style={{ width: '5em' }}>Date</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {orderList && orderList.map((order, index) => {\r\n                        const { personOf, email, orderDate, phone, pickupAddress, pickupStateCountry, latLng } = order;\r\n                        const { day, month, year } = dateConstructor(orderDate);\r\n                        return (\r\n                            <tr key={index}>\r\n                                <td className=\"text-center\" >\r\n                                {index + 1}.\r\n                        </td>\r\n                                <td >\r\n                                    <div id=\"1\" className=\"tableAnchor\" onClick={() => this.sendMeto({\r\n                                        personOf, email, phone, pickupAddress, pickupStateCountry, latLng\r\n                                    })}>\r\n                                        <div className=\"table_address\">{pickupAddress}</div>\r\n                                        <span className=\"table_name\">{personOf}</span>\r\n                                    </div>\r\n                                    <div className=\"table_small_older\">\r\n                                        <a href={\"mailto:\" + email} className=\"table_email\">\r\n                                        {email}\r\n                                </a>\r\n                                        <a href={\"tel:\" + phone} className=\"table_number\">\r\n                                        {phone}\r\n                                </a>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <span className=\"table_date\">{month+', '+day+' '+year}</span>\r\n                                    <div className=\"accepted\">Pickup</div>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <Row>\r\n                {OrderDisplay}\r\n                <div className=\"notif\" style={{ display: notifDisplay }}>{notification}<span role=\"img\" aria-label=\"sheep\" onClick={this.close}>&#x274E;</span> </div>\r\n                {/* <table className=\"table table-hover table-outline\">\r\n                    <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th className=\"text-center\" style={{ width: '4em' }}>No.</th>\r\n                            <th>Address</th>\r\n                            <th className=\"\" style={{ width: '5em' }}>Date</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className=\"text-center\" >\r\n                                1.\r\n                            </td>\r\n                            <td >\r\n                                <div id=\"1\" className=\"tableAnchor\" onClick={() => this.sendMeto({})}>\r\n                                    <div className=\"table_address\">Omolayo Pry School, Oba Ile, Akure, Ondo State</div>\r\n                                    <span className=\"table_name\">Fashanu Tosin</span>\r\n                                </div>\r\n                                <div className=\"table_small_older\">\r\n                                    <a href=\"mailto:fashanutosin7@gmail.com\" className=\"table_email\">\r\n                                        fashanutosin7@gmail.com\r\n                                    </a>\r\n                                    <a href=\"tel:09036723177\" className=\"table_number\">\r\n                                        09036723177\r\n                                    </a>\r\n                                </div>\r\n                            </td>\r\n                            <td>\r\n                                <span className=\"table_date\">July, 21 2020</span>\r\n                                <div className=\"accepted\">Pickup</div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table> */}\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orderData: state.orderData\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendOrderData: (data) => dispatch(sendFetchOrderData(data))\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Pending);","import React, { Component } from 'react';\nimport { Row } from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { getAuthUserAll, getAuthUserType } from '../../services/Auth';\nimport { sendFetchOrderData } from '../../store/actions/order';\nimport { dateConstructor } from '../../utils/utilityFunction'\n\nclass History extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      notification: '',\n      notifDisplay: 'none',\n    }\n    this.close = this.close.bind(this);\n    this.changeState = this.changeState.bind(this);\n  }\n\n  close() {\n    this.setState({\n      notifDisplay: 'none',\n      notification: '',\n    });\n  }\n\n  changeState(object) {\n    this.setState(object);\n  }\n\n  componentDidMount() {\n    const data = JSON.stringify(getAuthUserAll());\n    const { sendOrderData, orderData } = this.props\n    if (orderData.orderData.length === 0) {\n      let formData = new FormData();\n      formData.append('request', 'get_order_history');\n      formData.append('user_type', getAuthUserType());\n      formData.append('data', encodeURIComponent(data));\n      sendOrderData(formData);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { orderData, error } = this.props.orderData;\n    if (this.props !== prevProps) {\n      // ORDER DATA\n      if (orderData.length !== 0) {\n        if (orderData.error === 'true') {\n          this.changeState({\n            notifDisplay: 'block',\n            notification: orderData.errorMessage\n          });\n        }\n      } else {\n        if (error === 'true') {\n          this.changeState({\n            notifDisplay: 'block',\n            notification: 'Please refresh or try again later'\n          });\n        }\n      }\n    };\n  };\n\n\n  render() {\n    const { notifDisplay, notification } = this.state\n    const { error, orderData } = this.props.orderData;\n    let historyList;\n    if (orderData.length === 0 && error !== 'true') {\n      historyList = <div className=\"loader_con\"><div id=\"big_loader\"></div></div>;\n    } else {\n      historyList = <div className=\"timeline\">\n        {orderData.data && orderData.data.sort((a, b) => {\n          return a.iorderDate - b.orderDate;\n        }).map(order => {\n          let date = dateConstructor(order.orderDate * 1);\n          let status = order.status;\n          if (status === 'pending') {\n            status = <div className=\"update\">\n              <span className=\"pending\">PENDING</span>\n            </div>;\n          } else if (status === 'accepted') {\n            status = <div className=\"update\">\n              <span className=\"accepted\">ACCEPTED</span>\n            </div>;\n          } else {\n            status = <div className=\"update\">\n              <span className=\"confirmed\" role=\"img\" aria-label=\"confirmed\">SUCCESSFUL</span>\n            </div>;\n          }\n          return (\n            <div className=\"history_box\" key={order.id}>\n              <div className=\"history_date\">\n                <span className=\"hour\">{date.hour}:{date.minute} {date.ampm} </span>\n                <span className=\"month\">{date.day} {date.month} {date.shortYear}</span>\n              </div>\n              <div className=\"activity\">\n                <div className=\"title\">\n                  Ordered for waste disposal\n                  </div>\n                <div className=\"description\">\n                  Quantity: {order.orderQty} bag(s).\n                  </div>\n                {status}\n              </div>\n            </div>\n          )\n        })}\n      </div>;\n    }\n\n    return (\n      <React.Fragment>\n        <Row>\n          <div className=\"history\">\n            {historyList}\n            <div className=\"notif\" style={{ display: notifDisplay }}>{notification}<span role=\"img\" aria-label=\"sheep\" onClick={this.close}>&#x274E;</span> </div>\n          </div>\n        </Row>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    orderData: state.orderData\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendOrderData: (data) => dispatch(sendFetchOrderData(data))\n  };\n};\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(History);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Input, Row, Modal, ModalBody, ModalFooter, ModalHeader, FormGroup, Label } from 'reactstrap';\nimport { setAuthToken, getAuthUserType, getAuthUserAll, setAuthImage, getAuthName, setAuthName, signOut } from '../../../services/Auth';\nimport { sendFetchAccountData } from '../../../store/actions/user';\n\nclass Account extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      file: [],\n      name: '',\n      gender: '',\n      birthday: '',\n      latLng: '',\n      phone: '',\n      email: '',\n      oldPassword: '',\n      newPassword: '',\n      address: '',\n      imagePreviewUrl: '',\n      notification: '',\n      notifDisplay: 'none',\n      modal: false\n    }\n    this.close = this.close.bind(this);\n    this.handleFileChange = this.handleFileChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.fileRef = React.createRef();\n    this.changeState = this.changeState.bind(this);\n    this.commonState = this.commonState.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal,\n      oldPassword: '',\n      newPassword: ''\n    });\n  }\n\n  close() {\n    this.setState({\n      notifDisplay: 'none',\n      notification: '',\n    });\n  }\n\n  commonState(data) {\n    const { name, gender, birthday, phone, email, defaultAddress, defaultLatLng, image } = data;\n    this.changeState({\n      name: name.trim(),\n      demoName: name.trim(),\n      gender: gender,\n      demoGender: gender,\n      birthday: birthday,\n      demoBirthday: birthday,\n      phone: phone,\n      latLng: defaultLatLng,\n      email: email,\n      address: defaultAddress.trim(),\n      imagePreviewUrl: image.trim(),\n      prevImage: image.trim(),\n      modal: false\n    });\n  }\n\n  changeState(object) {\n    this.setState(object);\n  }\n\n  handleFileChange(e) {\n    let file = e.target.files[0];\n    let picReader = new FileReader();\n    console.log(file)\n    picReader.onloadend = () => {\n      this.changeState({\n        file: file,\n        imagePreviewUrl: picReader.result\n      });\n    };\n    picReader.readAsDataURL(file);\n  }\n\n  handleChange(e) {\n    if (e.target.id === 'oldPassword' || e.target.id === 'newPassword') {\n      /[^A-Za-z\\d@_*#$]+/.test(e.target.value) ? (\n        this.changeState({\n          notifDisplay: 'block',\n          notification: 'Only Alphanumeric and @_*#$ symbols are allowed'\n        })\n      ) : (\n          this.changeState(\n            {\n              [e.target.id]: e.target.value\n            }\n          )\n        )\n    } else {\n      this.changeState(\n        {\n          [e.target.id]: e.target.value\n        }\n      );\n    }\n  }\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let { sendFetchData } = this.props;\n    const { name, demoName, gender, demoGender, birthday, demoBirthday, file, oldPassword, newPassword } = this.state;\n    if (name.trim().split(/ (.+)/)[1] === undefined) {\n      this.changeState({\n        notifDisplay: 'block',\n        notification: 'Please add your Surname - Space - Name'\n      });\n    } else if (demoName === name && demoBirthday === birthday && demoGender === gender && oldPassword === '' && file.length === 0) {\n      this.changeState({\n        notifDisplay: 'block',\n        notification: 'Please make some changes to submit'\n      });\n    } else if (oldPassword !== '' && (oldPassword.length < 8 || newPassword.length < 8)) {\n      this.changeState({\n        notifDisplay: 'block',\n        notification: 'Password must be (8) characters or more'\n      });\n    } else if (oldPassword !== '' && (oldPassword === newPassword)) {\n      this.changeState({\n        notifDisplay: 'block',\n        notification: 'Sorry you entered an old password'\n      });\n    } else {\n      let data = JSON.stringify({ name, gender, birthday, oldPassword, newPassword, ...getAuthUserAll() });\n      let formData = new FormData();\n      formData.append('request', 'edit_account');\n      formData.append('user_type', getAuthUserType());\n      formData.append('file', file);\n      formData.append('data', encodeURIComponent(data));\n      sendFetchData(formData);\n    }\n  }\n\n  componentDidMount() {\n    const data = JSON.stringify({ ...getAuthUserAll() });\n    const { sendFetchData, userData } = this.props;\n    if (userData.userData.length === 0) {\n      let formData = new FormData();\n      formData.append('request', 'get_user');\n      formData.append('user_type', getAuthUserType());\n      formData.append('data', encodeURIComponent(data));\n      sendFetchData(formData);\n    } else {\n      this.commonState(userData.userData.data[0]);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { errorMessage, error, userloading, userData } = this.props.userData;\n    if (this.props !== prevProps) {\n      if (userData.length !== 0) {\n        if (userData.error === 'false' && userloading === 'done') {\n          this.commonState(userData.data[0]);\n          if (userData.submitted === 'true') {\n            if (userData.data[0].name !== getAuthName()) {\n              setAuthName(userData.data[0].name)\n            }\n            setAuthToken(userData.data[0].token);\n            if (userData.data[0].image !== this.state.prevImage) {\n              setAuthImage(userData.data[0].image);\n            }\n            this.changeState({\n              notifDisplay: 'block',\n              notification: userData.message\n            });\n          }\n        } else if (userData.error === 'true') {\n          if (userData.logoutUser === 'true') {\n            signOut();\n          }\n          if (userData.data[0].token !== undefined) {\n            setAuthToken(userData.data[0].token);\n          }\n          this.changeState({\n            notifDisplay: 'block',\n            notification: userData.errorMessage\n          });\n        }\n      } else if (error === 'true') {\n        this.changeState({\n          notifDisplay: 'block',\n          notification: errorMessage\n        });\n      }\n    };\n  };\n\n  render() {\n    let buttonText = 'SAVE';\n    let passwordButton = 'SAVE';\n    let displayData;\n    const { imagePreviewUrl, name, address, phone, email, gender, birthday, notifDisplay, latLng, notification, oldPassword, newPassword } = this.state;\n    const { userloading, userData, error } = this.props.userData;\n    if (userloading === 'done') {\n      buttonText = 'SAVE';\n      passwordButton = 'SAVE';\n    } else {\n      if (userloading === 'true' && oldPassword === '')\n        buttonText = <div id=\"loader\"></div>;\n      else\n        passwordButton = <div id=\"loader\"></div>;\n    }\n\n    if (userData.length === 0 && error !== 'true') {\n      displayData = <div className=\"loader_con\"><div id=\"big_loader\"></div></div>;\n    } else {\n      displayData = <div className=\"order_content\">\n        <form encType=\"multipart/form-data\" method=\"post\" onSubmit={this.handleSubmit} >\n          <div style={{ position: 'relative', width: '18em', margin: '0em auto 2em auto' }} className=\"community_container\">\n            <label htmlFor=\"file\" className=\"file_label\" style={{ height: '20em', border: '2px solid #20a8d8', borderRadius: '20%' }}>\n              <img src={imagePreviewUrl} alt=\"\" style={{ height: '20em' }} />\n              <div className=\"bar_upload\">\n                <span className=\"upload_icon straight\" style={{ width: '3em' }}></span>\n                <span className=\"upload_icon slanting\" style={{ width: '3em' }}></span>\n                <span className=\"upload_icon round\"></span>\n              </div>\n            </label>\n            <input type=\"file\" id=\"file\" name=\"file\" className=\"file\" accept=\"image/*\" onChange={this.handleFileChange} ref={this.fileRef} />\n          </div>\n          <span className=\"bag-head\"></span>\n          <div className=\"summary_inline\">\n            <div className=\"account_icon\" >\n              <span role=\"img\" aria-label=\"name\">&#128199;</span>\n            </div>\n            <div className=\"account_detail\">\n              <span className=\"h2\">Name</span><br /><br />\n              <Input type=\"text\" id=\"name\" style={{ color: 'black' }} value={name} onChange={this.handleChange} placeholder=\"Surname - Space - Name\" autoComplete=\"name\" required />\n            </div>\n          </div>\n          <span className=\"hr\"></span>\n          <div className=\"summary_inline\">\n            <div className=\"account_icon\">\n              <span role=\"img\" aria-label=\"address\">&#9873;</span>\n            </div>\n            <div className=\"account_detail\">\n              <span className=\"h2\">Address</span>\n              <span className=\"summary_text\">{address}</span><br />\n              <span className=\"h2\"><span role=\"img\" aria-label=\"name\">&#9742;</span> {phone}</span>\n              <span className=\"hr\"></span>\n              <Link to={{\n                pathname: \"/account/address\",\n                data: {\n                  address,\n                  latLng,\n                  phone,\n                  \"turnOn\": true\n                }\n              }} key={latLng}><Button className=\"mr-1 change_address\">CHANGE</Button></Link>\n            </div>\n          </div>\n          <span className=\"hr\"></span>\n          <div className=\"summary_inline\">\n            <div className=\"account_icon\">\n              <span role=\"img\" aria-label=\"email\">&#9993;</span>\n            </div>\n            <div className=\"account_detail\">\n              <span className=\"h2\">Email</span>\n              <span className=\"summary_text\">{email}</span>\n              <span className=\"hr\"></span>\n              <Button onClick={this.toggle} className=\"mr-1\">CHANGE PASSWORD</Button>\n            </div>\n          </div>\n          <span className=\"hr\"></span>\n          <div className=\"summary_inline\">\n            <div className=\"account_icon\">\n              <span role=\"img\" aria-label=\"gender\">&#9892;</span>\n            </div>\n            <div className=\"account_detail\">\n              <div className=\"personal_wrapper\">\n                <div className=\"personal_one\">\n                  <span className=\"h2\">Gender</span><br /><br />\n                  <Input type=\"select\" id=\"gender\" value={gender} onChange={this.handleChange} required>\n                    <option>Male</option>\n                    <option>Female</option>\n                  </Input>\n                </div>\n                <span style={{ width: '5%' }}></span>\n                <div className=\"personal_two\">\n                  <span className=\"h2\">Birthday</span><br /><br />\n                  <Input type=\"date\" id=\"birthday\" value={birthday} onChange={this.handleChange} max=\"2030-12-30\" min=\"1930-01-01\" placeholder=\"yyyy-mm-dd\" required />\n                </div>\n              </div>\n            </div>\n          </div>\n          <button type=\"submit\" className=\"btn-go-checkout\">{buttonText}</button>\n        </form>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}\n          className={'modal-primary ' + this.props.className}>\n          <ModalHeader toggle={this.toggle}>Change Password</ModalHeader>\n          <form method=\"post\" onSubmit={this.handleSubmit}>\n            <ModalBody>\n              <FormGroup>\n                <Label htmlFor=\"oldPassword\">Old Password</Label>\n                <Input type=\"text\" id=\"oldPassword\" value={oldPassword} onChange={this.handleChange} placeholder=\"Enter your old password\" required autoComplete=\"off\" />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"newPassword\">New Password</Label>\n                <Input type=\"text\" id=\"newPassword\" value={newPassword} onChange={this.handleChange} placeholder=\"Enter your new password\" required autoComplete=\"off\" />\n              </FormGroup>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" type=\"submit\" style={{ width: '100%' }}>{passwordButton}</Button>\n            </ModalFooter>\n          </form>\n        </Modal>\n      </div>;\n    }\n    return (\n      <React.Fragment>\n        <Row>\n          {displayData}\n          <div className=\"notif\" style={{ display: notifDisplay }}>{notification}<span role=\"img\" aria-label=\"sheep\" onClick={this.close}>&#x274E;</span> </div>\n        </Row>\n\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userData: state.userData\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendFetchData: (data) => dispatch(sendFetchAccountData(data))\n  };\n};\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(Account);","import React, { Component } from 'react'\r\nimport { Button } from 'reactstrap'\r\n\r\n\r\nexport class Support extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={{marginTop:'2em',textAlign:'center'}}>\r\n              <div style={{marginBottom:'5em', width:'100%'}}>\r\n              <Button type=\"button\" color=\"dark\"><a href=\"mailto:help@swiip.000webhostapp.com\" style={{color:'white'}}>Contact Us</a></Button>\r\n              </div>\r\n              <h3>About</h3>\r\n              <p>The purpose of this application is to improve the condition and quality of living in a country like Nigeria.</p>\r\n              <p>My soul aim is to reduce the amount of litered waste in the country by JOIN effort and DONATION through crowd funding to enhance the \r\n                state of our road and COMMUNITY. </p>\r\n              <p>Feel free to SUPPORT your COMMUNITY and you can also contact us if you want your community to be INCLUDED in our list (terms and condition applies)</p><br/><br/>\r\n              <h3>Policy</h3>\r\n              <p>This application has an OPEN SOURCE LISENCE and so therefore open to copy, modification and so thereof...</p>\r\n              <p>This project also aim to be a boiler plate for beginners and those who needs an admin panel with some logic, i.e redux,router, protected route etc included.</p>\r\n              <p>I also feel anyone hoping to build something around this idea for there state or country can take one or two ideas from this application</p>\r\n              <p>This is the first version written using procedural PHP, MySQL, Javascript, CSS & HTML. This uses classes rather than the new stateless function.</p>\r\n              <p>For the PHP source code, you can check my Git repo @johnerry</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n  export default Support;","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\n// import { FETCH_COMMUNITY_DATA_REQUEST, FETCH_COMMUNITY_DATA_SUCCESS, FETCH_COMMUNITY_DATA_FAILURE } from './actionTypes';\r\n\r\nexport const fetchAdminDataRequest = () => ({ type: \"FETCH_ADMIN_DATA_REQUEST\" });\r\nexport const fetchAdminDataSuccess = (data) => ({ type: \"FETCH_ADMIN_DATA_SUCCESS\", payload: data });\r\nexport const fetchAdminDataFailure = (error) => ({ type: \"FETCH_ADMIN_DATA_FAILURE\", payload: error });\r\n\r\n\r\nexport const sendAdminData = (data) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchAdminDataRequest());\r\n    axios.post('https://swiip.000webhostapp.com/account.php', data, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      }\r\n    }).then(response => {\r\n        const userData = response.data;\r\n        dispatch(fetchAdminDataSuccess(userData));\r\n      })\r\n      .catch(error => {\r\n        const errorMessage = error.message;\r\n        dispatch(fetchAdminDataFailure(errorMessage));\r\n      })\r\n\r\n  } catch (error) {\r\n\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { sendAdminData } from '../../../store/actions/admin';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Row, Col, Input } from 'reactstrap'\r\nimport { getAuthUserAll, getAuthUserType, setAuthToken, signOut } from '../../../services/Auth'\r\n\r\nexport class Editor extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: '',\r\n            image: '',\r\n            name: '',\r\n            user: '',\r\n            state: '',\r\n            propStatus: '',\r\n            propEmail: '',\r\n            propPhone: '',\r\n            newStatus: '',\r\n            newEmail: '',\r\n            newPhone: '',\r\n            notifDisplay: 'none',\r\n            notification: ''\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.close = this.close.bind(this);\r\n    }\r\n\r\n    close() {\r\n        this.setState({\r\n            notifDisplay: 'none',\r\n            notification: '',\r\n        });\r\n    }\r\n\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        let sendTo;\r\n        const { sendAdminData } = this.props\r\n        const { id, propEmail, name, newEmail, newPhone, newStatus } = this.state;\r\n        if (propEmail.trim() !== newEmail.trim()) {\r\n            sendTo = 'phone';\r\n        } else {\r\n            sendTo = 'email';\r\n        }\r\n        const data = JSON.stringify({ \"accountID\": id, \"accountName\": name, sendTo, \"email\": newEmail, \"phone\": newPhone, \"status\": newStatus, ...getAuthUserAll() });\r\n        let formData = new FormData();\r\n        formData.append('request', 'admin_edit_account');\r\n        formData.append('user_type', getAuthUserType());\r\n        formData.append('data', encodeURIComponent(data));\r\n        sendAdminData(formData);\r\n        //   console.log(this.state)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.data === undefined) {\r\n            this.props.history.push('/customer/');\r\n        } else {\r\n            const { id, state, phone, name, user_type, status, email, image } = this.props.location.data;\r\n            this.setState({\r\n                id,\r\n                image,\r\n                name,\r\n                user_type,\r\n                state,\r\n                propStatus: status,\r\n                propEmail: email,\r\n                propPhone: phone,\r\n                newStatus: status,\r\n                newEmail: email,\r\n                newPhone: phone\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps) {\r\n            const { loading, adminData } = this.props.adminData;\r\n            if (adminData.length !== 0) {\r\n                if (adminData.error === 'false' && loading === 'done' && adminData.submitted === 'true') {\r\n                    setAuthToken(adminData.token);\r\n                    this.props.history.goBack();\r\n                } else {\r\n                    if (adminData.logoutUser === 'true') {\r\n                        signOut();\r\n                    }\r\n                    this.setState({\r\n                        notifDisplay: 'block',\r\n                        notification: adminData.errorMessage\r\n                    });\r\n                }\r\n            };\r\n        };\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        let buttonText = 'SAVE';\r\n        const { loading } = this.props.adminData;\r\n        if (loading === 'done') {\r\n            buttonText = 'SAVE';\r\n        } else if (loading === 'true') {\r\n            buttonText = <div id=\"loader\"></div>;\r\n        }\r\n        const { name, image, user_type, state, newEmail, newPhone, newStatus, notifDisplay, notification } = this.state;\r\n        return (\r\n            <div className=\"order_content\">\r\n                <div style={{ position: 'relative', width: '10em', margin: '0em auto 2em auto' }} className=\"community_container\">\r\n                    <img src={image} alt=\"\" style={{ width: '10em', borderRadius: '50%', border: '2px solid  #20a8d8' }} />\r\n                </div>\r\n                <span className=\"bag-head\"></span><br />\r\n                <form encType=\"multipart/form-data\" method=\"post\" onSubmit={this.handleSubmit} >\r\n                    <Row>\r\n                        <Col sm=\"6\">\r\n                            <h3>Name</h3>\r\n                            <h5><span role=\"img\" aria-label=\"name\">&#128100;</span> &nbsp; {name}</h5>\r\n                        </Col>\r\n                        <Col sm=\"6\">\r\n                            <h3>User</h3>\r\n                            <h5><span role=\"img\" aria-label=\"name\">&#128100;</span> &nbsp; {user_type}</h5>\r\n                        </Col>\r\n                    </Row><br />\r\n                    <Row>\r\n                        <Col sm=\"6\">\r\n                            <h3>Status</h3>\r\n                            <Input type=\"select\" id=\"newStatus\" onChange={this.handleChange} value={newStatus}>\r\n                                <option>active</option>\r\n                                <option>pending</option>\r\n                                <option>inactive</option>\r\n                            </Input>\r\n                        </Col>\r\n                        <Col sm=\"6\">\r\n                            <h3>Email</h3>\r\n                            <Input type=\"text\" id=\"newEmail\" onChange={this.handleChange} value={newEmail} style={{ border: '1px solid lightgrey' }} required />\r\n                        </Col>\r\n                    </Row><br />\r\n                    <Row>\r\n                        <Col sm=\"6\">\r\n                            <h3>State</h3>\r\n                            <h5><span role=\"img\" aria-label=\"name\">&#128100;</span> &nbsp; {state}</h5>\r\n                        </Col>\r\n                        <Col sm=\"6\">\r\n                            <h3>Phone</h3>\r\n                            <Input type=\"number\" id=\"newPhone\" onChange={this.handleChange} value={newPhone} style={{ border: '1px solid lightgrey' }} required />\r\n                        </Col>\r\n                    </Row><br />\r\n                    <button type=\"submit\" className=\"btn-go-checkout\">{buttonText}</button>\r\n                </form>\r\n                <div className=\"notif\" style={{ display: notifDisplay }}>{notification}<span role=\"img\" aria-label=\"sheep\" onClick={this.close}>&#x274E;</span> </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        adminData: state.adminData\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendAdminData: (data) => dispatch(sendAdminData(data))\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Editor);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { sendAdminData } from '../../../store/actions/admin';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Row, InputGroup, InputGroupText, Input, InputGroupAddon } from 'reactstrap'\r\nimport { getAuthUserAll, getAuthUserType, signOut } from '../../../services/Auth'\r\nimport { dateConstructor } from '../../../utils/utilityFunction'\r\n\r\n\r\nexport class ReviewAgent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            emailFinder: '',\r\n            adminList: [],\r\n            adminListToDisplay: [],\r\n            notification: '',\r\n            notifDisplay: 'none',\r\n        }\r\n        this.close = this.close.bind(this);\r\n        this.changeState = this.changeState.bind(this);\r\n        this.genericState = this.genericState.bind(this);\r\n        this.sendMeto = this.sendMeto.bind(this);\r\n        this.genericFind = this.genericFind.bind(this);\r\n    }\r\n\r\n    close() {\r\n        this.setState({\r\n            notifDisplay: 'none',\r\n            notification: '',\r\n        });\r\n    }\r\n\r\n    changeState(object) {\r\n        this.setState(object);\r\n    }\r\n\r\n    genericFind(e) {\r\n        const list = this.state.adminList.filter(customer => customer.email.toLowerCase().indexOf(e.target.value.toLowerCase()) === 0);\r\n        this.changeState({\r\n            adminListToDisplay: list,\r\n            emailFinder: e.target.value\r\n        });\r\n    }\r\n\r\n    genericState(data) {\r\n        const list = data.filter(customer => customer.user_type === 'agent');\r\n        this.changeState({\r\n            adminListToDisplay: list,\r\n            adminList: list\r\n        });\r\n    }\r\n\r\n    sendMeto(data) {\r\n        const { id, state, phone, name, user_type, status, email, image } = data;\r\n        this.props.history.push({\r\n            pathname: '/account/edit',\r\n            data: {\r\n                id,\r\n                state,\r\n                phone,\r\n                name,\r\n                user_type,\r\n                status,\r\n                email,\r\n                image\r\n            }\r\n        });\r\n    }\r\n    \r\n\r\n    componentDidMount() {\r\n        const data = JSON.stringify({ \"accountID\": 'all', ...getAuthUserAll()});\r\n        const { sendAdminData, adminData } = this.props\r\n        let formData = new FormData();\r\n        formData.append('request', 'get_user');\r\n        formData.append('user_type', getAuthUserType());\r\n        formData.append('data', encodeURIComponent(data));\r\n        if (adminData.adminData.length === 0) {\r\n            sendAdminData(formData);\r\n        } else if (adminData.adminData.data !== undefined && adminData.adminData.error === 'false') {\r\n            this.genericState(adminData.adminData.data);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { adminData, error } = this.props.adminData;\r\n        if (this.props !== prevProps) {\r\n            if (adminData.length !== 0) {\r\n                if (adminData.error === 'true') {\r\n                    if (adminData.logoutUser === 'true') {\r\n                        signOut();\r\n                      }\r\n                    this.changeState({\r\n                        notifDisplay: 'block',\r\n                        notification: adminData.errorMessage\r\n                    });\r\n                } else {\r\n                    this.genericState(adminData.data);\r\n                }\r\n            } else {\r\n                if (error === 'true') {\r\n                    this.changeState({\r\n                        notifDisplay: 'block',\r\n                        notification: 'Please refresh or try again later'\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n\r\n    render() {\r\n        const { notification, notifDisplay, adminListToDisplay, emailFinder } = this.state;\r\n        let { error, adminData } = this.props.adminData;\r\n        let adminDisplay;\r\n        if (adminData.length === 0 && error !== 'true') {\r\n            adminDisplay = <div className=\"loader_con\"><div id=\"big_loader\"></div></div>;\r\n        } else {\r\n            adminDisplay = <table className=\"table table-striped table-hover table-outline\">\r\n                <thead className=\"\">\r\n                    <tr>\r\n                        <th className=\"text-center\" style={{ width: '3em' }} ><span role=\"img\" aria-label=\"people\">&#128101;</span></th>\r\n                        <th >User</th>\r\n                        <th className=\"\" >Role</th>\r\n                        <th className=\"\" style={{ width: '3em' }} >Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {adminListToDisplay && adminListToDisplay.map((list, index) => {\r\n                        let color = 'confirmed';\r\n                        const { id, state, phone,name, regDate, user_type, status, email, image } = list;\r\n                        const { day, month, year } = dateConstructor(regDate);\r\n                        if (status === 'pending') {\r\n                            color = 'accepted';\r\n                        }\r\n                        return (\r\n                            <tr key={index+1}>\r\n                                <td className=\"text-center\" >\r\n                                    <div className=\"c-avatar\" >\r\n                                        <img className=\"table_image\" src={image} alt=\"user_image\" />\r\n                                    </div>\r\n                                </td>\r\n                                <td >\r\n                                  <div onClick={() => this.sendMeto({\r\n                                        id, state, phone, name, user_type, status, email, image\r\n                                    })}>\r\n                                    <div>{name}</div>\r\n                                    <div className=\"small text-muted\">{email.substring(0,15)+'...'}</div>\r\n                                    <div className=\"small text-muted\">\r\n                                        Reg: {month+' '+day+' '+year}\r\n                                    </div>\r\n                                  </div>\r\n                                </td>\r\n                                <td >\r\n                                    <span>{user_type}</span>\r\n                                </td>\r\n                                <td >\r\n                                    <span className={color}>{status}</span>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n\r\n                </tbody>\r\n            </table>\r\n        }\r\n        return (\r\n            <Row>\r\n                <InputGroup className=\"input-prepend justify-content-end\" style={{ marginBottom: '2em' }}>\r\n                    <Input className=\"people_search\" type=\"text\" value={emailFinder} onChange={this.genericFind} placeholder=\"Who are you looking for?\" />\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>\r\n                            <i className=\"fa fa-search\"></i>\r\n                        </InputGroupText>\r\n                    </InputGroupAddon>\r\n                </InputGroup>\r\n                {adminDisplay}\r\n                <div className=\"notif\" style={{ display: notifDisplay }}>{notification}<span role=\"img\" aria-label=\"notification\" onClick={this.close}>&#x274E;</span> </div>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        adminData: state.adminData\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendAdminData: (data) => dispatch(sendAdminData(data))\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(ReviewAgent);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { sendAdminData } from '../../../store/actions/admin';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Row, InputGroup, InputGroupText, Input, InputGroupAddon } from 'reactstrap'\r\nimport { getAuthUserAll, getAuthUserType } from '../../../services/Auth'\r\nimport { dateConstructor } from '../../../utils/utilityFunction'\r\n\r\n\r\nexport class ReviewCustomer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            emailFinder: '',\r\n            adminList: [],\r\n            adminListToDisplay: [],\r\n            notification: '',\r\n            notifDisplay: 'none',\r\n        }\r\n        this.close = this.close.bind(this);\r\n        this.changeState = this.changeState.bind(this);\r\n        this.genericState = this.genericState.bind(this);\r\n        this.sendMeto = this.sendMeto.bind(this);\r\n        this.genericFind = this.genericFind.bind(this);\r\n    }\r\n\r\n    close() {\r\n        this.setState({\r\n            notifDisplay: 'none',\r\n            notification: '',\r\n        });\r\n    }\r\n\r\n    changeState(object) {\r\n        this.setState(object);\r\n    }\r\n\r\n    genericFind(e) {\r\n        const list = this.state.adminList.filter(customer => customer.email.toLowerCase().indexOf(e.target.value.toLowerCase()) === 0);\r\n        this.changeState({\r\n            adminListToDisplay: list,\r\n            emailFinder: e.target.value\r\n        });\r\n    }\r\n\r\n    genericState(data) {\r\n        const list = data.filter(customer => customer.user_type === 'customer');\r\n        this.changeState({\r\n            adminListToDisplay: list,\r\n            adminList: list\r\n        });\r\n    }\r\n\r\n    sendMeto(data) {\r\n        const { id, state, phone, name, user_type, status, email, image } = data;\r\n        this.props.history.push({\r\n            pathname: '/account/edit',\r\n            data: {\r\n                id,\r\n                state,\r\n                phone,\r\n                name,\r\n                user_type,\r\n                status,\r\n                email,\r\n                image\r\n            }\r\n        });\r\n    }\r\n    \r\n\r\n    componentDidMount() {\r\n        const data = JSON.stringify({ \"accountID\": 'all', ...getAuthUserAll()});\r\n        const { sendAdminData, adminData } = this.props\r\n        let formData = new FormData();\r\n        formData.append('request', 'get_user');\r\n        formData.append('user_type', getAuthUserType());\r\n        formData.append('data', encodeURIComponent(data));\r\n        if (adminData.adminData.length === 0) {\r\n            sendAdminData(formData);\r\n        } else if (adminData.adminData.data !== undefined && adminData.adminData.error === 'false') {\r\n            this.genericState(adminData.adminData.data);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { adminData, error } = this.props.adminData;\r\n        if (this.props !== prevProps) {\r\n            if (adminData.length !== 0) {\r\n                if (adminData.error === 'true') {\r\n                    this.changeState({\r\n                        notifDisplay: 'block',\r\n                        notification: adminData.errorMessage\r\n                    });\r\n                } else {\r\n                    this.genericState(adminData.data);\r\n                }\r\n            } else {\r\n                if (error === 'true') {\r\n                    this.changeState({\r\n                        notifDisplay: 'block',\r\n                        notification: 'Please refresh or try again later'\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n\r\n    render() {\r\n        const { notification, notifDisplay, adminListToDisplay, emailFinder } = this.state;\r\n        let { error, adminData } = this.props.adminData;\r\n        let adminDisplay;\r\n        if (adminData.length === 0 && error !== 'true') {\r\n            adminDisplay = <div className=\"loader_con\"><div id=\"big_loader\"></div></div>;\r\n        } else {\r\n            adminDisplay = <table className=\"table table-striped table-hover table-outline\">\r\n                <thead className=\"\">\r\n                    <tr>\r\n                        <th className=\"text-center\" style={{ width: '3em' }} ><span role=\"img\" aria-label=\"people\">&#128101;</span></th>\r\n                        <th >User</th>\r\n                        <th className=\"\" >Role</th>\r\n                        <th className=\"\" style={{ width: '3em' }} >Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {adminListToDisplay && adminListToDisplay.map((list, index) => {\r\n                        const { id, state, phone,name, regDate, user_type, status, email, image } = list;\r\n                        const { day, month, year } = dateConstructor(regDate);\r\n                        return (\r\n                            <tr key={index+1}>\r\n                                <td className=\"text-center\" >\r\n                                    <div className=\"c-avatar\" >\r\n                                        <img className=\"table_image\" src={image} alt=\"user_image\" />\r\n                                    </div>\r\n                                </td>\r\n                                <td >\r\n                                  <div onClick={() => this.sendMeto({\r\n                                        id, state, phone, name, user_type, status, email, image\r\n                                    })}>\r\n                                    <div>{name}</div>\r\n                                    <div className=\"small text-muted\">{email.substring(0,15)+'...'}</div>\r\n                                    <div className=\"small text-muted\">\r\n                                        Reg: {month+' '+day+' '+year}\r\n                                    </div>\r\n                                  </div>\r\n                                </td>\r\n                                <td >\r\n                                    <span>{user_type}</span>\r\n                                </td>\r\n                                <td >\r\n                                    <span className=\"confirmed\">{status}</span>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n\r\n                </tbody>\r\n            </table>\r\n        }\r\n        return (\r\n            <Row>\r\n                <InputGroup className=\"input-prepend justify-content-end\" style={{ marginBottom: '2em' }}>\r\n                    <Input className=\"people_search\" type=\"text\" value={emailFinder} onChange={this.genericFind} placeholder=\"Who are you looking for?\" />\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>\r\n                            <i className=\"fa fa-search\"></i>\r\n                        </InputGroupText>\r\n                    </InputGroupAddon>\r\n                </InputGroup>\r\n                {adminDisplay}\r\n                <div className=\"notif\" style={{ display: notifDisplay }}>{notification}<span role=\"img\" aria-label=\"notification\" onClick={this.close}>&#x274E;</span> </div>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        adminData: state.adminData\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendAdminData: (data) => dispatch(sendAdminData(data))\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(ReviewCustomer);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { EditorState, convertToRaw, convertFromRaw } from 'draft-js';\nimport { Input, Row } from 'reactstrap';\nimport { Editor } from 'react-draft-wysiwyg';\nimport '../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n// import htmlToDraft from 'html-to-draftjs';\nimport { sendCommunityData } from '../../store/actions/community';\nimport { setAuthToken, getAuthUserAll, getAuthUserType, signOut } from '../../services/Auth';\nimport { htmlspecialchars_decode } from '../../utils/utilityFunction'\n\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: [],\n      imagePreviewUrl: '',\n      location: '',\n      amount: '',\n      submitted: 'false',\n      notification: '',\n      notifDisplay: 'none',\n      editorState: EditorState.createEmpty()\n    };\n    this.close = this.close.bind(this);\n    this.onEditorStateChange = this.onEditorStateChange.bind(this);\n    this.handleFileChange = this.handleFileChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.cleanSlate = this.cleanSlate.bind(this);\n    this.updateState = this.updateState.bind(this);\n    this.changeState = this.changeState.bind(this);\n    this.fileRef = React.createRef();\n  }\n\n  close() {\n    this.setState({\n      notifDisplay: 'none'\n    });\n  }\n\n  changeState(object) {\n    this.setState(object);\n  }\n\n  updateState(communityData, id) {\n    let data = communityData.communityData.data.find(comm => comm.id === id);\n    let editorStuff = convertFromRaw(JSON.parse(htmlspecialchars_decode(data.details)));\n    this.changeState({\n      file: [],\n      imagePreviewUrl: data.image,\n      location: data.location,\n      amount: data.fundNeeded * 1,\n      editorState: EditorState.createWithContent(editorStuff)\n    });\n  }\n\n  cleanSlate() {\n    this.changeState({\n      file: [],\n      imagePreviewUrl: '',\n      location: '',\n      amount: '',\n      details: {},\n      submitted: 'true',\n      notification: 'Submitted Successfully',\n      notifDisplay: 'block',\n      editorState: EditorState.createEmpty()\n    });\n  }\n\n  handleFileChange(e) {\n    let file = e.target.files[0];\n    let picReader = new FileReader();\n    if (file !== undefined) {\n      picReader.onloadend = () => {\n        this.changeState({\n          file: file,\n          imagePreviewUrl: picReader.result\n        });\n      };\n      picReader.readAsDataURL(file);\n    }\n  }\n\n  handleChange(e) {\n    this.setState(\n      {\n        [e.target.id]: e.target.value\n      }\n    );\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id * 1;\n    const { sendData, communityData } = this.props;\n    const data = JSON.stringify(getAuthUserAll());\n    let formData = new FormData();\n    if (id) {\n      if (!isNaN(id)) {\n        if (communityData.communityData.length === 0) {\n          formData.append('request', 'get_comm_list');\n          formData.append('user_type', getAuthUserType());\n          formData.append('data', encodeURIComponent(data));\n          sendData(formData);\n        } else {\n          this.updateState(communityData, id);\n        };\n      } else {\n        this.props.history.push('/community');\n      };\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const id = this.props.match.params.id * 1;\n    let { loading, error, errorMesage, communityData } = this.props.communityData;\n    if (this.props !== prevProps) {\n      console.log(communityData)\n      if (communityData.token !== undefined) {\n        setAuthToken(communityData.token);\n      } else if (communityData.logoutUser !== undefined && communityData.logoutUser === 'true') {\n        signOut();\n      }\n      if (loading === 'done' && error === 'true') {\n        this.changeState({\n          notification: errorMesage,\n          notifDisplay: 'block',\n        });\n      } else {\n        if (loading === 'done' && communityData.error === 'false' && !id) {\n          if (communityData.submitted === 'true') {\n            this.cleanSlate();\n          }\n        } else if (loading === 'done' && communityData.error === 'false' && id) {\n          if (communityData.submitted === 'true') {\n            this.props.history.push('/community');\n          } else {\n            this.updateState(this.props.communityData, id);\n          }\n        } else if (loading === 'done' && communityData.error === 'true') {\n          this.changeState({\n            notification: communityData.errorMesage,\n            notifDisplay: 'block',\n          });\n        }\n      }\n\n    };\n  }\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const id = this.props.match.params.id * 1;\n    const { sendData } = this.props;\n    const { imagePreviewUrl, file, location, amount, editorState } = this.state;\n    const details = JSON.stringify(convertToRaw(editorState.getCurrentContent()));\n    const json = JSON.stringify({ \"commID\": id, location, amount, details, ...getAuthUserAll() });\n    let formData = new FormData();\n    formData.append('user_type', getAuthUserType());\n    formData.append('data', encodeURIComponent(json));\n    formData.append('file', file);\n    if (id) {\n      const { communityData } = this.props.communityData;\n      const data = communityData.data.find(comm => comm.id === id);\n      if ((data.image === imagePreviewUrl) && (data.location === location) && (data.fundNeeded * 1 === amount) &&\n        (htmlspecialchars_decode(data.details) === details)) {\n        this.changeState({\n          notification: 'You have not made any changes',\n          notifDisplay: 'block',\n        });\n      } else {\n        formData.append('request', 'update_comm');\n        sendData(formData);\n      };\n    } else {\n      if (file.length === 0) {\n        this.changeState({\n          notification: 'Please select an image',\n          notifDisplay: 'block',\n        });\n      } else {\n        formData.append('request', 'add_comm');\n        sendData(formData)\n      };\n    };\n  }\n\n  onEditorStateChange(editorState) {\n    this.setState({\n      editorState,\n    });\n  };\n\n  render() {\n    let { location, amount, imagePreviewUrl, submitted, editorState, notifDisplay, notification } = this.state;\n    let { loading } = this.props.communityData;\n    let buttonText = '';\n    loading === 'done' && submitted === 'true' ? (buttonText = 'SUBMIT') :\n      (loading === 'true' ? (buttonText = <div id=\"loader\"></div>) : (buttonText = 'SUBMIT'));\n\n    return (\n      <React.Fragment>\n        <Row>\n          <form encType=\"multipart/form-data\" method=\"post\" onSubmit={this.handleSubmit} className=\"community_container containerFull\">\n            <label htmlFor=\"file\" className=\"file_label\">\n              <img src={imagePreviewUrl} alt=\"\" />\n              <div className=\"bar_upload\">\n                <span className=\"upload_icon straight\"></span>\n                <span className=\"upload_icon slanting\"></span>\n                <span className=\"upload_icon round\"></span>\n              </div>\n            </label>\n            <input type=\"file\" id=\"file\" name=\"file\" className=\"file\" accept=\"image/*\" onChange={this.handleFileChange} ref={this.fileRef} />\n            <div className=\"title\">\n              <label htmlFor=\"location\"></label>\n              <Input type=\"text\" id=\"location\" name=\"location\" className=\"title_input\" value={location} onChange={this.handleChange} placeholder=\"Enter location here\" required />\n            </div>\n            <hr className=\"hr\" />\n            <div className=\"amount_edit_cover\">\n              <label htmlFor=\"amount\" className=\"amount_edit_label\">Fund:</label>\n              <span>&#8358;</span><Input type=\"number\" name=\"amount\" id=\"amount\" value={amount} className=\"amount_edit\" onChange={this.handleChange} placeholder=\"Amount\" required />\n            </div>\n            <div style={{ margin: '1.2em', border: '2px solid lightgrey', borderRadius: '0.5em', width: '100%', backgroundColor: 'white' }}>\n              <Editor\n                editorState={editorState}\n                wrapperClassName=\"demo-wrapper\"\n                editorClassName=\"demo-editor\"\n                onEditorStateChange={this.onEditorStateChange}\n                toolbar={{\n                  options: ['inline', 'blockType', 'fontSize', 'fontFamily', 'list', 'textAlign', 'history']\n                }}\n              />\n            </div>\n            <button type=\"submit\" name=\"button\" className=\"btn_donate btn edit\"> {buttonText} </button>\n          </form>\n          <div className=\"notif\" style={{ display: notifDisplay }}>{notification}<span role=\"img\" aria-label=\"sheep\" onClick={this.close}>&#x274E;</span> </div>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    communityData: state.communityData\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendData: (data) => dispatch(sendCommunityData(data))\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps)\n)(Edit);","import React, { Component } from 'react';\nimport { Col, Container, Row } from 'reactstrap';\n\nclass Page404 extends Component {\n  render() {\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"6\">\n              <div className=\"clearfix\">\n                <h1 className=\"float-left display-3 mr-4\">404</h1>\n                <h4 className=\"pt-3\">Oops! You're lost.</h4>\n                <p className=\"text-muted float-left\">The page you are looking for was not found.</p>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Page404;\n","import React, { Component } from 'react';\n// import Dashboard from '../Dashboard'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Row, Progress, Input } from 'reactstrap';\nimport { sendCommunityData } from '../../store/actions/community';\nimport PayStack from '../../components/Payment/PayStack';\nimport draftToHtml from 'draftjs-to-html';\nimport { getAuthUserType, getAuthUserAll, setAuthToken, signOut } from '../../services/Auth';\nimport { Link } from 'react-router-dom';\nimport { htmlspecialchars_decode, StringToJSX, dateConstructor } from '../../utils/utilityFunction'\nimport Page404 from '../Pages/Page404';\n\nclass View extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      firstName: '',\n      lastName: '',\n      notification: '',\n      notifDisplay: 'none',\n      total: '',\n      dontShow: true,\n      commData: []\n    }\n    this.close = this.close.bind(this);\n    this.changeState = this.changeState.bind(this);\n    this.deleting = this.deleting.bind(this);\n    this.saveOrder = this.saveOrder.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  close() {\n    this.setState({\n      notifDisplay: 'none',\n      notification: '',\n    });\n  }\n\n  changeState(object) {\n    this.setState(object);\n  }\n\n  saveOrder(donateRef) {\n    const id = this.props.match.params.id * 1;\n    const { email, total } = this.state;\n    const { sendCommData } = this.props;\n    const json = JSON.stringify({\n      \"commID\": id, email, donateRef, \"amount\": total, ...getAuthUserAll()\n    });\n    let formData = new FormData();\n    formData.append('request', 'donate_comm');\n    formData.append('user_type', getAuthUserType());\n    formData.append('data', encodeURIComponent(json));\n    sendCommData(formData);\n  }\n\n  handleChange(e) {\n    if (e.target.value * 1 >= 200) {\n      this.changeState({\n        total: e.target.value,\n        dontShow: false\n      });\n    } else {\n      this.changeState({\n        total: e.target.value,\n        dontShow: true\n      });\n    }\n  }\n\n\n  componentDidMount() {\n    const id = this.props.match.params.id * 1;\n    const { sendCommData, communityData } = this.props\n    if (!isNaN(id)) {\n      let nameExplode = getAuthUserAll().name.trim().split(/ (.+)/);\n      if (nameExplode[1] === undefined) {\n        nameExplode[1] = nameExplode[0];\n      }\n      this.changeState({ lastName: nameExplode[0], firstName: nameExplode[1], email: getAuthUserAll().findBy })\n      if (communityData.communityData.length === 0) {\n        const data = JSON.stringify(getAuthUserAll());\n        if (communityData.communityData.length === 0) {\n          let formData = new FormData();\n          formData.append('request', 'get_comm_list');\n          formData.append('user_type', getAuthUserType());\n          formData.append('data', encodeURIComponent(data));\n          sendCommData(formData);\n        }\n      } else {\n        this.changeState({\n          commData: [communityData.communityData.data.find(comm => comm.id === id)]\n        });\n      }\n    };\n  }\n\n\n  componentDidUpdate(prevProps) {\n    const id = this.props.match.params.id * 1;\n    const { communityData, error } = this.props.communityData;\n    if (this.props !== prevProps) {\n      if (communityData.length !== 0) {\n        if (communityData.error === 'true') {\n          if (communityData.logoutUser === 'true') {\n            signOut();\n          }\n          this.changeState({\n            notifDisplay: 'block',\n            notification: communityData.errorMessage\n          });\n        } else if (communityData.submitted === 'true') {\n          setAuthToken(communityData.token);\n          if (communityData.message === 'Donate success') {\n            this.changeState({\n              total: '',\n              commData: [communityData.data.find(comm => comm.id === id)],\n              notifDisplay: 'block',\n              notification: communityData.message\n            });\n          } else {\n            this.props.history.push('/community');\n          }\n        } else {\n          this.changeState({\n            commData: [communityData.data.find(comm => comm.id === id)]\n          });\n        }\n      } else {\n        if (error === 'true') {\n          this.changeState({\n            notifDisplay: 'block',\n            notification: 'Please refresh or try again later'\n          });\n        }\n      }\n    };\n  };\n\n\n  deleting(id) {\n    const { sendCommData } = this.props\n    const data = JSON.stringify({ ...getAuthUserAll(), \"commID\": id });\n    let formData = new FormData();\n    formData.append('request', 'del_comm');\n    formData.append('user_type', getAuthUserType());\n    formData.append('data', encodeURIComponent(data));\n    sendCommData(formData);\n  }\n\n\n\n  render() {\n    let { notification, notifDisplay, commData, email, firstName, lastName, total, dontShow } = this.state;\n    let id = this.props.match.params.id * 1;\n    let { error, communityData } = this.props.communityData;\n    let pageDisplay;\n    let button;\n\n    switch (getAuthUserType()) {\n      case 'customer':\n        button = (id) => (\n          <div className=\"btn_view\">\n            <Input type=\"number\" style={{ border: '1px solid grey', marginRight: '0.5em', fontWeight: '600' }} id=\"amount\" value={total} onChange={this.handleChange} placeholder=\" min. ₦200\" autoComplete=\"off\" />\n            <PayStack data={{\n              email, lastName, firstName, total, \"saveOrder\": this.saveOrder,\n              \"button\": ['btn_donate btn delete', '', 'Donate', dontShow]\n            }} />\n          </div>\n        );\n        break;\n      case 'admin':\n        button = (id) => (<div className=\"btn_view\">\n          <button className=\"delete btn\" onClick={() => this.deleting(id)}>Delete</button> &nbsp;&nbsp;\n          <Link to={'/community/edit/' + id}><button className=\"edit btn\">Edit</button></Link>\n        </div>);\n        break;\n      default:\n        button = (id) => (null);\n    }\n\n    if (isNaN(id)) {\n      pageDisplay = <Page404 />;\n    } else {\n      if (communityData.length === 0 && error !== 'true') {\n        pageDisplay = <div className=\"loader_con\"><div id=\"big_loader\"></div></div>;\n      } else {\n        if (commData[0] === undefined) {\n          pageDisplay = <Page404 />;\n        } else {\n          pageDisplay = <React.Fragment>\n            {commData && commData.map(comm => {\n              let eachPara = comm.details;\n              let color;\n              let published = dateConstructor(comm.published);\n              let percentage = Math.round((comm.fundGotten / comm.fundNeeded) * 100) + 1;\n              percentage > 60 ? (color = 'success') : (color = 'red')\n              eachPara = draftToHtml(JSON.parse(htmlspecialchars_decode(htmlspecialchars_decode(eachPara))));\n              return (\n                <Row key={comm.id}>\n                  <div className=\"community_container containerFull\">\n                    <div className=\"image\">\n                      <img src={comm.image} alt=\"\" />\n                    </div>\n                    <div className=\"title_big\">\n                      {comm.location}\n                    </div>\n                    <hr className=\"hr\" />\n                    <div className=\"details\">\n                      <div className=\"detail\">\n                        <div className=\"published\">\n                          Date Pubished\n                            </div>\n                        <div className=\"date\">\n                          {published.day + ', ' + published.month + ' ' + published.year}\n                        </div>\n                      </div>\n                      <div className=\"detail\">\n                        <div className=\"amount\"> <span>Fund needed:</span> ₦{comm.fundNeeded}</div>\n                        <Progress color={color} value={percentage} className=\"mb-3\">{percentage}%</Progress>\n                      </div>\n                    </div>\n                    <div className=\"text\">\n                      <StringToJSX domString={eachPara} className=\"card__text\" />\n                    </div>\n                    {button(comm.id)}\n                  </div>\n                </Row>\n              )\n            })}\n          </React.Fragment>;\n        }\n      }\n    }\n\n\n    return (\n      <React.Fragment>\n        {pageDisplay}\n        <div className=\"notif\" style={{ display: notifDisplay }}>{notification}<span role=\"img\" aria-label=\"sheep\" onClick={this.close}>&#x274E;</span> </div>\n      </React.Fragment>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    communityData: state.communityData\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendCommData: (data) => dispatch(sendCommunityData(data))\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps)\n)(View);","// import React from 'react';\nimport Order from './views/Order';\nimport CustomerMap from './views/Map/CustomerMap';\nimport AgentMAp from './views/Map/AgentMAp'\nimport Summary from './views/Order/Summary';\nimport Community from './views/Community';\nimport New from './views/Pickups/New';\nimport Pending from './views/Pickups/Pending';\nimport History from './views/History';\nimport Account from './views/Pages/Account';\nimport Support from './views/Pages/Account/Support';\nimport Editor from './views/Pages/Account/Editor';\nimport ReviewAgent from './views/Pages/Account/ReviewAgent';\nimport ReviewCustomer from './views/Pages/Account/ReviewCustomer';\nimport Edit from './views/Community/Editor';\nimport View from './views/Community/View';\nimport Page404 from './views/Pages/Page404';\n\nexport const adminRoutes = [\n    { path: '/community/edit/:id', exact: true, name: 'Edit', component: Edit },\n    { path: '/community/edit', exact: true, name: 'Edit', component: Edit },\n    { path: '/account/edit', exact: true, name: 'Edit', component: Editor },\n    { path: '/community/:id', exact: true, name: 'View', component: View },\n    { path: '/account/address', exact: true, name: 'Map', component: CustomerMap },\n    { path: '/account', exact: true, name: 'Account', component: Account },\n    { path: '/community', exact: true, name: 'Community', component: Community },\n    { path: '/customer', exact: true, name: 'Customer', component: ReviewCustomer },\n    { path: '/agent', exact: true, name: 'Agent', component: ReviewAgent },\n    { path: '/', exact: false, name: 'Home', component: Page404 }\n\n  ];\n\nexport const agentRoutes = [\n    { path: '/pickups/new', exact: true, name: 'Address', component: New },\n    { path: '/pickups/pending', exact: true, name: 'Address', component: Pending },\n    // { path: '/community/:id', exact: true, name: 'View', component: View },\n    { path: '/account/address', exact: true, name: 'Map', component: CustomerMap },\n    { path: '/pickups/map', exact: true, name: 'Order', component: AgentMAp },\n    { path: '/account', exact: true, name: 'Account', component: Account },\n    { path: '/support', exact: true, name: 'Support', component: Support },\n    // { path: '/community', exact: true, name: 'Community', component: Community },\n    { path: '/history', exact: true, name: 'History', component: History },\n    { path: '/', exact: false, name: 'Home', component: Page404 }\n\n  ];\nexport const customerRoutes = [\n    { path: '/order/summary', exact: true, name: 'Summary', component: Summary },\n    { path: '/community/:id', exact: true, name: 'View', component: View },\n    { path: '/account/address', exact: true, name: 'Map', component: CustomerMap },\n    { path: '/order', exact: true, name: 'Order', component: Order },\n    { path: '/account', exact: true, name: 'Account', component: Account },\n    { path: '/support', exact: true, name: 'Support', component: Support },\n    { path: '/community', exact: true, name: 'Community', component: Community },\n    { path: '/history', exact: true, name: 'History', component: History },\n    { path: '/', exact: false, name: 'Home', component: Page404 }\n\n  ];\n\n// https://github.com/ReactTraining/react-router/tree/master/packages/react-router-config\n\nexport default {\n  agentRoutes,\n  adminRoutes,\n  customerRoutes\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  children: PropTypes.node,\n};\n\nconst defaultProps = {};\n\nclass DefaultFooter extends Component {\n  render() {\n    // eslint-disable-next-line\n    const { children, ...attributes } = this.props;\n    return (\n      <React.Fragment>\n        <span><a href=\"https://swiip.000webhostapp.com\">Swiip</a> &copy; 2020 Clean-Initiative.</span>\n        <span className=\"ml-auto\">Contact Us @ <a href=\"https://swiip.000webhostapp.com/contact\">Swiip desk</a></span>\n      </React.Fragment>\n    );\n  }\n}\n\nDefaultFooter.propTypes = propTypes;\nDefaultFooter.defaultProps = defaultProps;\n\nexport default DefaultFooter;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Badge, UncontrolledDropdown, DropdownItem, DropdownMenu, DropdownToggle, Nav, NavItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\n// import profileImage from '../../assets/img/avatar/profile_image.png';\nimport { AppNavbarBrand, AppSidebarToggler } from '@coreui/react';\nimport { getAuthImage } from '../../services/Auth';\n// import logo from '../../assets/img/brand/logo.svg'\nimport sweeperLogo from '../../assets/img/brand/sweeper_logo.png';\nimport sweeperLogoSmall from '../../assets/img/brand/sweeper_small_logo.png';\n// import sygnet from '../../assets/img/brand/sygnet.svg'\n\nconst propTypes = {\n  children: PropTypes.node,\n};\n\nconst defaultProps = {};\n\nclass DefaultHeader extends Component {\n\n  render() {\n    // eslint-disable-next-line\n    const { children, ...attributes } = this.props;\n    return (\n      <React.Fragment>\n        <AppSidebarToggler className=\"d-lg-none\" display=\"md\" mobile />\n        <AppNavbarBrand\n          full={{ src: sweeperLogo, width: 120, height: 30, alt: 'Broomy Logo' }}\n          minimized={{ src: sweeperLogoSmall, width: 30, height: 30, alt: 'Broomy Logo' }}\n        />\n        <AppSidebarToggler className=\"d-md-down-none\" display=\"lg\" />\n        <Nav className=\"d-md-down-none\" navbar>\n          <NavItem className=\"px-3\">\n            <NavLink to=\"/account\" className=\"nav-link\">Settings</NavLink>\n          </NavItem>\n        </Nav>\n        <Nav className=\"ml-auto\" navbar>\n          <UncontrolledDropdown nav direction=\"down\">\n            <DropdownToggle nav>\n              <img src={getAuthImage()} className=\"img-avatar\" alt=\"user\" style={{border:'1px solid lightgrey'}} />\n            </DropdownToggle>\n            <DropdownMenu right>\n              <DropdownItem header tag=\"div\" className=\"text-center\"><strong>Account</strong></DropdownItem>\n              <DropdownItem><i className=\"fa fa-envelope\"></i> Message</DropdownItem>\n              <DropdownItem header tag=\"div\" className=\"text-center\"><strong>Settings</strong></DropdownItem>\n              <DropdownItem><NavLink to=\"/account\" className=\"nav-link\" style={{color:'black'}}><i className=\"fa fa-user\"></i> Profile</NavLink></DropdownItem>\n              <DropdownItem><i className=\"fa fa-money\"></i> Payments<Badge color=\"secondary\">42</Badge></DropdownItem>\n              <DropdownItem onClick={e => this.props.onLogout(e)}><i className=\"fa fa-sign-out\"></i> Logout</DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </Nav>\n      </React.Fragment>\n    );\n  }\n}\n\nDefaultHeader.propTypes = propTypes;\nDefaultHeader.defaultProps = defaultProps;\n\nexport default DefaultHeader;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport * as router from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport { AppFooter, AppHeader, AppSidebar, AppSidebarMinimizer, AppBreadcrumb2 as AppBreadcrumb, AppSidebarNav2 as AppSidebarNav } from '@coreui/react';\nimport { removeAuthState, getAuthUserType } from '../../services/Auth';\n\n// sidebar nav config\nimport { customer, agent, admin } from '../../_nav';\n// import navigation from '../../_nav';\n// routes config\nimport { adminRoutes, agentRoutes, customerRoutes } from '../../routeList';\nimport DefaultFooter from './DefaultFooter';\nimport DefaultHeader from './DefaultHeader';\n\nclass DefaultLayout extends Component {\n  constructor(props) {\n    super(props);\n    this.signOut = this.signOut.bind(this);\n    // this.navPicker = this.navPicker.bind(this);\n  }\n\n  signOut(e) {\n    e.preventDefault();\n    removeAuthState();\n    window.location.reload(true);\n    // this.props.history.push('/login')\n  }\n\n  navPicker(user_type, customerTab, agentTab, adminTab) {\n    return {\n      'customer': customerTab,\n      'agent': agentTab,\n      'admin': adminTab\n    }[user_type];\n  }\n\n  routePicker(user_type, cusRoutes, agtRoutes, admRoutes) {\n    return {\n      'customer': cusRoutes,\n      'agent': agtRoutes,\n      'admin': admRoutes\n    }[user_type];\n  }\n\n  render() {\n    const mystyle = {\n      backgroundColor: \"white\",\n    };\n\n    const routes = this.routePicker(getAuthUserType(), customerRoutes, agentRoutes, adminRoutes);\n    const nav = this.navPicker(getAuthUserType(), customer, agent, admin);\n    return (\n      <div className=\"app\">\n        <AppHeader fixed>\n          <DefaultHeader onLogout={e => this.signOut(e)} />\n        </AppHeader>\n        <div className=\"app-body\">\n          <AppSidebar fixed display=\"lg\">\n            <AppSidebarNav navConfig={nav} {...this.props} router={router} />\n            <AppSidebarMinimizer />\n          </AppSidebar>\n          <main className=\"main\" style={mystyle}>\n            <AppBreadcrumb appRoutes={routes} router={router} />\n\n            <Container fluid >\n              <Switch>\n                {routes.map((route, idx) => {\n                  return route.component ? (\n                    <Route\n                      key={idx}\n                      path={route.path}\n                      exact={route.exact}\n                      name={route.name}\n                      render={props => (\n                        <route.component {...props} />\n                      )} />\n                  ) : (null);\n                })}\n                {/* <Redirect from=\"/\" to=\"/order\" /> */}\n              </Switch>\n            </Container>\n          </main>\n        </div>\n        <AppFooter>\n          <DefaultFooter />\n        </AppFooter>\n      </div>\n    );\n  }\n}\n\nexport default DefaultLayout;\n","import React, { Component } from 'react'\r\n\r\nexport class whatever extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n        this.say = this.say.bind(this);\r\n    }\r\n\r\n    say() {\r\n        console.log('helllo, i am whatever function from another class')\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default whatever\r\n","/* eslint-disable linebreak-style */\n/* eslint-disable import/no-cycle */\n/* eslint-disable import/no-named-as-default */\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { Router, Route as DefaultRoute, Switch, Redirect } from 'react-router-dom';\nimport history from './history';\nimport Login from './views/Pages/Login';\nimport Register from './views/Pages/Register';\nimport Message from './views/Pages/Message/Message';\nimport DefaultLayout from './containers/DefaultLayout';\nimport Test from './components/Payment/Test'\nimport { getAuthEmail, getAuthUserType } from './services/Auth';\n\n// @desc  A function to check if user is authenticated. Check if token exists\n// @ex    const isAuth = isAuthenticated()\n// const isAuthenticated = () => true;\n\n// @desc    This is a function that create protected/private routes.\n//          It makes use of isAuthenticated function to check if the user\n//          has the access right to the route.\n// @use   <PrivateRoute path=\"<name of path>\" component={Component to render} />\n// @ex    <PrivateRoute path=\"/sign-in\" component={SignInPage} />\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <DefaultRoute\n    {...rest}\n    render={(props) => (getAuthEmail() && getAuthUserType() ? (\n      <Component {...props} />\n    ) : (\n        <Redirect\n          to={{\n            pathname: '/login'\n          }}\n        />\n      ))\n    }\n  />\n);\n\n// @desc    This is a function that create default/public/unprotected routes.\n// @use     <Route exact path=\"<name of path>\" component={Component to render} />\n// @ex      <Route exact path=\"/\" component={LandingPage} />\nconst Route = ({ component: Component, ensureNonAuth, ...rest }) => (\n  <DefaultRoute {...rest} render={(props) => <Component {...props} />} />\n);\n\n// @desc  All routes goes here. Either private of public\n\nexport default () => (\n  <Router history={history}>\n    <Switch>\n      <Route ensureNonAuth exact path=\"/login\" component={Login} />\n      <Route ensureNonAuth exact path=\"/message\" component={Message} />\n      <Route ensureNonAuth exact path=\"/register\" component={Register} />\n      <PrivateRoute path=\"/\" name=\"Home\" component={DefaultLayout} />\n    </Switch>\n  </Router>\n);\n","import React, { Component } from 'react'\r\nimport whatever from './whatever'\r\n\r\n\r\nexport class Test extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       \r\n    }\r\n    this.whatever = new whatever();\r\n  }\r\n  \r\n    render() {\r\n      this.whatever.say();\r\n        return (\r\n            <div style={{backgroundColor:'white'}}>\r\n                <table className=\"table table-striped table-hover table-outline\">\r\n                <thead className=\"\">\r\n                {/* <thead className=\"thead-light\"> */}\r\n                  <tr>\r\n                    <th className=\"text-center\"><span role=\"img\" aria-label=\"people\">&#128101;</span></th>\r\n                    <th>User</th>\r\n                    <th className=\"\">Role</th>\r\n                    <th className=\"\">Status</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td className=\"text-center\" >\r\n                      <div className=\"c-avatar\" >\r\n                        <img style={{height:'3em', border:'1px solid lightgrey', borderRadius:'50%'}} src={'https://swiip.000webhostapp.com/upload/account/6746554796224img_20200805_155545_652_1.png'} className=\"c-avatar-img\" alt=\"admin@bootstrapmaster.com\" />\r\n                        <span className=\"c-avatar-status bg-success\"></span>\r\n                      </div>\r\n                    </td>\r\n                    <td >\r\n                      <div>Yiorgos Avraamu</div>\r\n                      <div className=\"small text-muted\">\r\n                      Reg: Jan 1 2015\r\n                      </div>\r\n                    </td>\r\n                    <td >\r\n                        <span>Agent</span>\r\n                    </td>\r\n                    <td >\r\n                      <span className=\"confirmed\">Active</span>\r\n                    </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <td className=\"text-center\" >\r\n                      <div className=\"c-avatar\" >\r\n                        <img style={{height:'3em', border:'1px solid lightgrey', borderRadius:'50%'}} src={'https://swiip.000webhostapp.com/upload/account/6746554796224img_20200805_155545_652_1.png'} className=\"c-avatar-img\" alt=\"admin@bootstrapmaster.com\" />\r\n                        <span className=\"c-avatar-status bg-success\"></span>\r\n                      </div>\r\n                    </td>\r\n                    <td >\r\n                      <div>Yiorgos Avraamu</div>\r\n                      <div className=\"small text-muted\">\r\n                      Reg: Jan 1 2015\r\n                      </div>\r\n                    </td>\r\n                    <td >\r\n                        <span>Agent</span>\r\n                    </td>\r\n                    <td >\r\n                      <span className=\"accepted\">Pending</span>\r\n                    </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <td className=\"text-center\" >\r\n                      <div className=\"c-avatar\" >\r\n                        <img style={{height:'3em', border:'1px solid lightgrey', borderRadius:'50%'}} src={'https://swiip.000webhostapp.com/upload/account/6746554796224img_20200805_155545_652_1.png'} className=\"c-avatar-img\" alt=\"admin@bootstrapmaster.com\" />\r\n                        <span className=\"c-avatar-status bg-success\"></span>\r\n                      </div>\r\n                    </td>\r\n                    <td >\r\n                      <div>Yiorgos Avraamu</div>\r\n                      <div className=\"small text-muted\">\r\n                      Reg: Jan 1 2015\r\n                      </div>\r\n                    </td>\r\n                    <td >\r\n                        <span>Agent</span>\r\n                    </td>\r\n                    <td >\r\n                      <span className=\"accepted\">Pending</span>\r\n                    </td>\r\n                  </tr>\r\n\r\n                </tbody>\r\n              </table>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test\r\n","/* eslint-disable linebreak-style */\nimport { FETCH_USER_DATA_REQUEST, RESET_USER_DATA, FETCH_USER_DATA_SUCCESS, FETCH_USER_DATA_FAILURE } from '../actions/actionTypes';\n\nconst initialState = {\n  userloading: 'false',\n  userData: [],\n  error: 'false',\n  errorMessage: ''\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_USER_DATA_REQUEST:\n      return {\n        ...state,\n        userloading: 'true'\n      };\n    case FETCH_USER_DATA_SUCCESS:\n      return {\n        error: 'false',\n        errorMessage: '',\n        userData: action.payload,\n        userloading: 'done'\n      };\n    case RESET_USER_DATA:\n      return {\n        userloading: 'false',\n        userData: [],\n        error: 'false',\n        errorMessage: ''\n      };\n    case FETCH_USER_DATA_FAILURE:\n      return {\n        ...state,\n        userloading: 'done',\n        error: 'true',\n        errorMessage: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","/* eslint-disable linebreak-style */\r\nimport { FETCH_ORDER_DATA_REQUEST, RESET_ORDER_DATA, FETCH_ORDER_DATA_SUCCESS, FETCH_ORDER_DATA_FAILURE } from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  orderloading: 'false',\r\n  orderData: [],\r\n  error: 'false',\r\n  errorMessage: ''\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_ORDER_DATA_REQUEST:\r\n      return {\r\n        ...state,\r\n        orderloading: 'true'\r\n      };\r\n    case FETCH_ORDER_DATA_SUCCESS:\r\n      return {\r\n        error: 'false',\r\n        errorMessage: '',\r\n        orderData: action.payload,\r\n        orderloading: 'done'\r\n      };\r\n    case RESET_ORDER_DATA:\r\n      return {\r\n        orderloading: 'false',\r\n        orderData: [],\r\n        error: 'false',\r\n        errorMessage: ''\r\n      };\r\n    case FETCH_ORDER_DATA_FAILURE:\r\n      return {\r\n        ...state,\r\n        orderloading: 'done',\r\n        error: 'true',\r\n        errorMessage: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport { FETCH_ADMIN_DATA_REQUEST, FETCH_ADMIN_DATA_SUCCESS, FETCH_ADMIN_DATA_FAILURE } from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  loading: 'false',\r\n  adminData: [],\r\n  error: 'false',\r\n  errorMessage: ''\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_ADMIN_DATA_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: 'true'\r\n      }\r\n    case FETCH_ADMIN_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        adminData: action.payload,\r\n        loading: 'done',\r\n      }\r\n    case FETCH_ADMIN_DATA_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: 'done',\r\n        error: 'true',\r\n        errorMessage: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","/* eslint-disable linebreak-style */\nimport { FETCH_COMMUNITY_DATA_REQUEST, FETCH_COMMUNITY_DATA_SUCCESS, FETCH_COMMUNITY_DATA_FAILURE } from '../actions/actionTypes';\n\nconst initialState = {\n  loading: 'false',\n  communityData: [],\n  error: 'false',\n  errorMessage: ''\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_COMMUNITY_DATA_REQUEST:\n      return {\n        ...state,\n        loading: 'true'\n      }\n    case FETCH_COMMUNITY_DATA_SUCCESS:\n      return {\n        ...state,\n        communityData: action.payload,\n        loading: 'done',\n      }\n    case FETCH_COMMUNITY_DATA_FAILURE:\n      return {\n        ...state,\n        loading: 'done',\n        error: 'true',\n        errorMessage: action.payload\n      }\n    default:\n      return state;\n  }\n};","/* eslint-disable linebreak-style */\nimport { USER_UI_START_LOADING, USER_UI_STOP_LOADING } from '../actions/actionTypes';\n\nconst initialState = {\n  isUserLoading: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case USER_UI_START_LOADING:\n      return {\n        ...state,\n        isUserLoading: true\n      };\n    case USER_UI_STOP_LOADING:\n      return {\n        ...state,\n        isUserLoading: false\n      };\n    default:\n      return state;\n  }\n};\n","/* eslint-disable linebreak-style */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-underscore-dangle */\n\nimport { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport userData from './reducers/user';\nimport orderData from './reducers/order';\nimport adminData from './reducers/admin';\nimport communityData from './reducers/community';\nimport ui from './reducers/ui';\n\nconst appReducer = combineReducers({\n  userData: userData,\n  communityData: communityData,\n  orderData: orderData,\n  adminData: adminData,\n  ui: ui\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === 'RESET_APP') {\n    state = undefined;\n  }\n  return appReducer(state, action);\n};\n\nlet composeEnhancers = compose;\n\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n  composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n}\n\nconst middleware = composeEnhancers(applyMiddleware(thunkMiddleware));\nconst store = createStore(rootReducer, middleware);\n\nexport default store;\n","// import { Component } from \"react\";\n\n/* eslint-disable linebreak-style */\nexport const USER_UI_START_LOADING = 'USER_UI_START_LOADING';\nexport const USER_UI_STOP_LOADING = 'USER_UI_STOP_LOADING';\n\nexport const SET_USER = 'SET_USER';\nexport const FETCH_USER_DATA_REQUEST = 'FETCH_USER_DATA_REQUEST';\nexport const FETCH_USER_DATA_SUCCESS = 'FETCH_USER_DATA_SUCCESS';\nexport const FETCH_USER_DATA_FAILURE = 'FETCH_USER_DATA_FAILURE';\nexport const RESET_USER_DATA = 'RESET_USER_DATA';\n\nexport const FETCH_COMMUNITY_DATA_REQUEST = 'FETCH_COMMUNITY_DATA_REQUEST';\nexport const FETCH_COMMUNITY_DATA_SUCCESS = 'FETCH_COMMUNITY_DATA_SUCCESS';\nexport const FETCH_COMMUNITY_DATA_FAILURE = 'FETCH_COMMUNITY_DATA_FAILURE';\n\nexport const FETCH_ORDER_DATA_REQUEST = 'FETCH_OREDR_DATA_REQUEST';\nexport const FETCH_ORDER_DATA_SUCCESS = 'FETCH_ORDER_DATA_SUCCESS';\nexport const FETCH_ORDER_DATA_FAILURE = 'FETCH_ORDER_DATA_FAILURE';\nexport const RESET_ORDER_DATA = 'RESET_USER_DATA';\n\nexport const FETCH_ADMIN_DATA_REQUEST = 'FETCH_ADMIN_DATA_REQUEST';\nexport const FETCH_ADMIN_DATA_SUCCESS = 'FETCH_ADMIN_DATA_SUCCESS';\nexport const FETCH_ADMIN_DATA_FAILURE = 'FETCH_ADMIN_DATA_FAILURE';\n\n\nexport const SET_ORDER = 'SET_ORDER';\n\n\n","/* eslint-disable linebreak-style */\n/* eslint-disable no-unused-vars */\n/* eslint-disable class-methods-use-this */\nimport React from 'react';\nimport { Provider } from 'react-redux';\n// import { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\n// import createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport Routes from './routes';\nimport store from './store';\n// import './theming.css'\n\n// import themeFile from './utils/theme';\n\n// const theme = createMuiTheme(themeFile);\n\n// Wrap all your providers should be here\n\nexport default () => (\n    // <MuiThemeProvider theme={theme}>\n    <Provider store={store} >\n        <Routes />\n    </Provider>\n    // </MuiThemeProvider>\n);","// /* eslint-disable linebreak-style */\n// /* eslint-disable no-unused-vars */\nimport React from 'react';\nimport Providers from './providers';\nimport './fontawesome/font_awesome.css';\n// import '../node_modules/font-awesome/css/font-awesome.min.css'\nimport './scss/style.scss';\nimport './theming.css';\n\n// // NOTE: Do not adjust this file. Contact the team before making changes to this file.\nconst App = () => <Providers />;\n\nexport default App;\n","/* eslint-disable linebreak-style */\n/* eslint-disable no-console */\n/* eslint-disable no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n  // [::1] is the IPv6 localhost address.\n  || window.location.hostname === '[::1]'\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n            + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable linebreak-style */\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\n// NOTE: Do not adjust this file. Contact the team before making changes to this file.\nconst app = <App />;\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}